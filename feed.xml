<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://mincong.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mincong.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-10-25T22:31:23+02:00</updated><id>https://mincong.io/feed.xml</id><title type="html">Mincong Huang</title><subtitle>Hi, welcome to my blog! I'm a software engineer at Datadog. I write blog posts in my free time. My blogs are bits and pieces of my tech journey. Most of them are related to Java. Hope you enjoy them! My opinions are my own, not Datadog's. This blog is powered by Jekyll, a simple, blog-aware, static sites solution.
</subtitle><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><entry xml:lang="en"><title type="html">Elasticsearch Snapshot APIs</title><link href="https://mincong.io/en/elasticsearch-snapshot-apis/" rel="alternate" type="text/html" title="Elasticsearch Snapshot APIs" /><published>2021-10-25T16:34:05+02:00</published><updated>2021-10-25T16:34:05+02:00</updated><id>https://mincong.io/en/elasticsearch-snapshot-apis</id><content type="html" xml:base="https://mincong.io/en/elasticsearch-snapshot-apis/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;When managing Elasticsearch clusters in production, you will probably need to
backup and restore a cluster or specific indices since this is an efficient way
to avoid data loss. This can be done using the feature “Snapshot And Restore” in
Elasticsearch. However, it’s not easy to remember all the commands you need,
such as creating a new snapshot, listing existing snapshots, monitoring the
snapshot restore progress, canceling an ongoing snapshot, etc.
During my work at Datadog, I had the chance to work with the “Snapshot And
Restore” feature in AWS, GCP, and Azure. Therefore, I would like to share with
you the commands I used as a cheatsheet.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Before getting started, you may ask: there are so many APIs, how can I remember
them?! Well, it’s not that
complicated. All the APIs follow the hierarchy: snapshot plugin &amp;gt; snapshot
repository &amp;gt; snapshots (or snapshot expression) &amp;gt; snapshot specific endpoint.
And for restore operations, they are standard recovery operations, so you can
from them from cat recovery or indexing recovery API. Based on the rules above,
we can summarize them as the following list of APIs:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;METHOD&amp;gt; /_snapshot/&amp;lt;?repo&amp;gt;/&amp;lt;?snapshot&amp;gt;/&amp;lt;?_action&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET     /_snapshot
GET     /_snapshot/_status

GET     /_snapshot/&amp;lt;repo&amp;gt;
PUT     /_snapshot/&amp;lt;repo&amp;gt;
DELETE  /_snapshot/&amp;lt;repo&amp;gt;
GET     /_snapshot/&amp;lt;repo&amp;gt;/_status
POST    /_snapshot/&amp;lt;repo&amp;gt;/_cleanup
POST    /_snapshot/&amp;lt;repo&amp;gt;/_verify
GET     /_snapshot/&amp;lt;repo&amp;gt;/_current

GET     /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;
PUT     /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;
POST    /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;
DELETE  /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;
GET     /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;/_status
GET     /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;/_restore

GET     /_cat/snapshots/{repo}
GET     /_cat/recovery

GET     /&amp;lt;index&amp;gt;/_recovery
---

snapshot_expression:
  - &quot;snap_1&quot;        -- snapshot 1
  - &quot;snap_1,snap_2&quot; -- snapshot 1 and 2, separated by comma ','
  - &quot;snap_*&quot;        -- all snapshots starting with &quot;snap_&quot;
  - &quot;_all&quot;          -- all snapshots
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s go through them one by one.&lt;/p&gt;

&lt;h2 id=&quot;snapshot-apis&quot;&gt;Snapshot APIs&lt;/h2&gt;

&lt;h3 id=&quot;create-snapshot&quot;&gt;Create Snapshot&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/create-snapshot-api.html&quot;&gt;documentation&lt;/a&gt;]
Create a snapshot for the entire cluster or the target data streams and indices.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT  /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;
POST /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /_snapshot/my_repo/snapshot_2?wait_for_completion=true

{
  &quot;indices&quot;: &quot;index_a,index_b&quot;,
  &quot;ignore_unavailable&quot;: true,
  &quot;include_global_state&quot;: false,
  &quot;metadata&quot;: {
    &quot;taken_by&quot;: &quot;user123&quot;,
    &quot;taken_because&quot;: &quot;backup before upgrading&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;clone-snapshot&quot;&gt;Clone Snapshot&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/clone-snapshot-api.html&quot;&gt;documentation&lt;/a&gt;]
Clones part or all of a snapshot into a new snapshot within the same repository.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;source_snapshot&amp;gt;/_clone/&amp;lt;target_snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /_snapshot/my_repo/old_snapshot/_clone/new_partial_snapshot

{
  &quot;indices&quot;: &quot;index_a,index_b&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get-snapshot-info&quot;&gt;Get Snapshot Info&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-api.html&quot;&gt;documentation&lt;/a&gt;]
Get information about one or more snapshots.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get-snapshot-status&quot;&gt;Get Snapshot Status&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-status-api.html&quot;&gt;documentation&lt;/a&gt;]
Get Snapshot Status API returns additional information beyond the Get Snapshot
Info API, such as shard status and file statistics:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;/_status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;restore-snapshot&quot;&gt;Restore Snapshot&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/restore-snapshot-api.html&quot;&gt;documentation&lt;/a&gt;]
Restore Snapshot API allows you to restore all indices (complete restore) of a
given snapshot or only restore a subset of them (partial restore):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;/_restore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;delete-snapshot&quot;&gt;Delete Snapshot&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-snapshot-api.html&quot;&gt;documentation&lt;/a&gt;]
Delete a snapshot.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DELETE /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;snapshot-repository-apis&quot;&gt;Snapshot Repository APIs&lt;/h2&gt;

&lt;h3 id=&quot;list-repositories&quot;&gt;List Repositories&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-repo-api.html&quot;&gt;Documentation&lt;/a&gt;]
List all the snapshot repositories.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/
GET /_snapshot/_all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get-repository&quot;&gt;Get Repository&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-repo-api.html&quot;&gt;Documentation&lt;/a&gt;]
Get information about one or more registered snapshot repositories.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;createupdate-repository&quot;&gt;Create/Update Repository&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/put-snapshot-repo-api.html&quot;&gt;Documentation&lt;/a&gt;] Registers or updates a snapshot repository.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /_snapshot/&amp;lt;repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /_snapshot/my_repository
{
  &quot;type&quot;: &quot;fs&quot;,
  &quot;settings&quot;: {
    &quot;location&quot;: &quot;my_backup_location&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;verify-repository&quot;&gt;Verify Repository&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/verify-snapshot-repo-api.html&quot;&gt;documentation&lt;/a&gt;]
Verifies that a snapshot repository is functional.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /_snapshot/&amp;lt;repository&amp;gt;/_verify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;delete-repository&quot;&gt;Delete Repository&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-snapshot-repo-api.html&quot;&gt;documentation&lt;/a&gt;]
Unregisters one or more snapshot repositories.&lt;/p&gt;

&lt;p&gt;NOTE: When a repository is unregistered, Elasticsearch only removes the
reference to the location where the repository is storing the snapshots. The
snapshots themselves are left untouched and in place. To delete the actual
snapshots, you should use the “Delete Snapshot API”. This API handles the
snapshot repository.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DELETE /_snapshot/&amp;lt;repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;clean-up-repository&quot;&gt;Clean up Repository&lt;/h3&gt;

&lt;p&gt;[&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/clean-up-snapshot-repo-api.html&quot;&gt;documentation&lt;/a&gt;]
Triggers the review of a snapshot repository’s contents and deletes any stale
data that is not referenced by existing snapshots.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /_snapshot/&amp;lt;repository&amp;gt;/_cleanup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;monitoring-apis&quot;&gt;Monitoring APIs&lt;/h2&gt;

&lt;p&gt;Description extracted from official documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-monitor-snapshot-restore.html&quot;&gt;Monitor snapshot and restore
progress | Elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;snapshot-in-progress&quot;&gt;Snapshot In Progress&lt;/h3&gt;

&lt;p&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_current&lt;/code&gt; parameter to get all currently running snapshots in the
cluster:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/_current
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or a single one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/snapshot_1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Retrieve all currently running snapshots with detailed status info:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/_status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;… limit the results to a target repository:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/_status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;… limit the result to the given snapshot (even if it’s not currently running):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_snapshot/&amp;lt;repository&amp;gt;/&amp;lt;snapshot&amp;gt;/_status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;restore-in-progress&quot;&gt;Restore In Progress&lt;/h3&gt;

&lt;p&gt;The restore process is a standard recovery mechanism of Elasticsearch. So you
can use the cat recovery API to monitor the snapshot restore as other
recoveries. Perhaps you want to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep snapshot&lt;/code&gt; to filter snapshots.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_cat/recovery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or using the index recovery API to have a JSON result with more detailed
information:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /&amp;lt;index&amp;gt;/_recovery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cancel-snapshot-creation&quot;&gt;Cancel Snapshot Creation&lt;/h3&gt;

&lt;p&gt;You can do that using the delete snapshot API.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DELETE /_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cancel-snapshot-restore&quot;&gt;Cancel Snapshot Restore&lt;/h3&gt;

&lt;p&gt;You can do that by deleting data streams and indices that are being restored. Be
careful! The data for all deleted data streams and indices will be removed from
the cluster.&lt;/p&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to go further from here?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To learn more about different APIs related to snapshot repository or snapshot
themselves, visit the official documentation
&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshot-restore-apis.html&quot;&gt;“Snapshot and restore APIs | Elasticsearch”&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;To monitor snapshot and restore progress, visit the official documentation
&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-monitor-snapshot-restore.html&quot;&gt;“Monitor snapshot and restore progress |
Elasticsearch”&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we saw how to remember different APIs efficiently by
using the resource hierarchy (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_snapshot/&amp;lt;repo&amp;gt;/&amp;lt;snapshot&amp;gt;/&amp;lt;action&amp;gt;&lt;/code&gt;) and the
relationship between restore and recovery; we saw the list of APIs for snapshot
operations and snapshot repository operations; we also saw how to monitor the
snapshot or restore progress and cancel them; finally, I shared some resources to
let you go further from this article.
Interested to know more? You can subscribe to &lt;a href=&quot;/feed.xml&quot;&gt;the feed of my blog&lt;/a&gt;, follow me
on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or
&lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. Hope you enjoy this article, see you the next time!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Elastic, &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshot-restore.html&quot;&gt;“Snapshot and
restore”&lt;/a&gt;, &lt;em&gt;Elasticsearch Documentation&lt;/em&gt;, 2021.&lt;/li&gt;
  &lt;li&gt;Opster Team, &lt;a href=&quot;https://opster.com/elasticsearch-glossary/elasticsearch-snapshot/&quot;&gt;“Elasticsearch Snapshot”&lt;/a&gt;, &lt;em&gt;Opster&lt;/em&gt;, 2021.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="api" /><summary type="html">This article summarizes the list of APIs for &quot;Snapshot and Restore&quot; in Elasticsearch, which allows you to perform operations easily and navigate to official documentation if you need more detail.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-alfons-morales-YLSwjSy7stw-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-alfons-morales-YLSwjSy7stw-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Error Retries in Temporal Workflow</title><link href="https://mincong.io/en/error-retries-in-temporal/" rel="alternate" type="text/html" title="Error Retries in Temporal Workflow" /><published>2021-10-09T22:08:20+02:00</published><updated>2021-10-09T22:08:20+02:00</updated><id>https://mincong.io/en/error-retries-in-temporal</id><content type="html" xml:base="https://mincong.io/en/error-retries-in-temporal/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;When working with Temporal to build workflows, you will have to face to error
handling at some point because workflow and activity can fail for different
reasons. Temporal Go SDK defines its &lt;a href=&quot;https://docs.temporal.io/docs/go/error-handling/&quot;&gt;error
handling&lt;/a&gt; logic and &lt;a href=&quot;https://docs.temporal.io/docs/go/retries/&quot;&gt;activity
and workflow retries&lt;/a&gt; in the official
documentation. But whenever I visit those pages, I always feel that
it’s missing something that I need as a developer. So I decide to write this
article, to share my understanding of error retries in Temporal in Go SDK, as a
complementary to the official documents. And hopefully, it will clarify
different situations and give you a clearer picture of how errors are retried.
This article is written with Temporal Go SDK v1.10.0 (15 Sept 2021).&lt;/p&gt;

&lt;p&gt;After reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The difference between retryable and non-retryable error at acvitity level&lt;/li&gt;
  &lt;li&gt;Non-retryable error types in retry policy&lt;/li&gt;
  &lt;li&gt;How to use retry policy?&lt;/li&gt;
  &lt;li&gt;The maximum attempts when retrying&lt;/li&gt;
  &lt;li&gt;How to write unit tests?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don’t have time to read the entire article, here is a table for
summarizing the difference.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Scope&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Error Type&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Methods&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Retryable (Default)&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Retryable (Override)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Activity&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ApplicationError&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewNonRetryableApplicationError()&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Activity&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ApplicationError&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewApplicationError()&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Activity&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Other errors&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fmt.Errorf()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;errors.New()&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Retry policy (activity options)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Top-level workflow&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;All&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Retry policy (start workflow options)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Child workflow&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;All&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Retry policy (child workflow options)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;retryable-and-non-retryable-application-error&quot;&gt;Retryable and Non-Retryable Application Error&lt;/h2&gt;

&lt;p&gt;By default, Temporal retries activities, but not workflows. According to
official documentation &lt;a href=&quot;https://docs.temporal.io/docs/go/error-handling/&quot;&gt;Error Handling in
Go&lt;/a&gt;, if the activity returns
an error as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;errors.New()&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fmt.Errorf()&lt;/code&gt;, that error will be converted to
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*temporal.ApplicationError&lt;/code&gt;, which is retryable. If you don’t want the error to
be retried, you can return a non-retryable application error from the activity.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;// retryable&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Errorf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oops&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;// retryable&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temporal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewApplicationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oops&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;// non-retryable&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temporal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewNonRetryableApplicationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oops&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is easy to understand: Temporal wants to provide a fault-tolerant system so
that it can retry automatically when thing goes wrong. So at activity-level,
error are retried by default, unless user asks Temporal to not retry explicitly via wrapper
method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewNonRetryableApplicationError(...)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we dive into the source code, you can see that
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ApplicationError&lt;/code&gt; determines the retry-ability of an error using its internal
boolean attribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nonRetryable&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// go.temporal.io/sdk@v1.10.0/internal/error.go&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;// ApplicationError returned from activity implementations with message and optional details.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ApplicationError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;temporalError&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;          &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;errType&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;nonRetryable&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;// HERE&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cause&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;details&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EncodedValues&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One possible usecase for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewNonRetryableApplicationError(...)&lt;/code&gt; is when
interacting with a third-party service. When that service returns a
deterministic error indicating that required action cannot be performed, you may
not want to retry. For example, when a resource deletion request is rejected by
the third party service because it is still in used, you probably
don’t want to retry. Therefore, calling
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewNonRetryableApplicationError(...)&lt;/code&gt; is a good choice.&lt;/p&gt;

&lt;h2 id=&quot;non-retryable-error-types-in-retry-policy&quot;&gt;Non-Retryable Error Types in Retry Policy&lt;/h2&gt;

&lt;p&gt;Another way to define non-retryable error types for activity is to provide a
custom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RetryPolicy&lt;/code&gt; as part of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActivityOptions&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ChildWorkflowOptions&lt;/code&gt;.
For example, to avoid retrying errors of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MyError&lt;/code&gt;, we can make it as
non-retryable as follows:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyWorkflowWithRetryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WithActivityOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActivityOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;StartToCloseTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;RetryPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temporal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;InitialInterval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;BackoffCoefficient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;MaximumInterval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;MaximumAttempts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;NonRetryableErrorTypes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MyError&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;// HERE&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But, why Temporal has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NonRetryableErrorTypes&lt;/code&gt; in Retry Policy? In my opionion,
there are several reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temporal.NewNonRetryableApplicationError(...)&lt;/code&gt; is not enough.&lt;/strong&gt;
It does not fit all the usecases.
Sometime users already know the error types that they don’t want to retry, but
they don’t want to determine the error types themselves for each activity and
fire a non-retryable applicaton error, since it makes the activity verbose.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bringing the control at workflow level.&lt;/strong&gt; An activity can be used for multiple
workflows, e.g. primitive activities for GitHub, Slack, Build, Kubernetes, etc.
Depending on the case of each workflow, some may want to retry while others
don’t.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Retry policy is not only used by activity.&lt;/strong&gt; It can be used as part of
the activity options, child workflow options, or event the top-level workflow
options. Since the policy controls the retry activitation, having
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NonRetryableErrorTypes&lt;/code&gt; allows to refine the activiations on different
types of error.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;using-retry-policy&quot;&gt;Using Retry Policy&lt;/h2&gt;

&lt;p&gt;Now, let’s see how to use retry policy in different cases.&lt;/p&gt;

&lt;h3 id=&quot;activity-options&quot;&gt;Activity Options&lt;/h3&gt;

&lt;p&gt;Enable custom retry policy as activity options:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyWorkflowWithRetryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WithActivityOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActivityOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;StartToCloseTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;RetryPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, failed activities will be retried, more precisely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Errors having type defined in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NonRetryableErrorTypes&lt;/code&gt; won’t be retried&lt;/li&gt;
  &lt;li&gt;Errors wrapped into non-retryable application error won’t be retried&lt;/li&gt;
  &lt;li&gt;Other application errors will be retried&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;child-workflow-options&quot;&gt;Child Workflow Options&lt;/h3&gt;

&lt;p&gt;Enable custom retry policy as child workflow options:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyWorkflowWithChildWorkflowRetryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WithChildOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ChildWorkflowOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;WorkflowRunTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;RetryPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, failed child workflow will be retried (which is not the case by
default). The child workflow will be retried on all types of errors, except the ones
defined in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NonRetryableErrorTypes&lt;/code&gt; in the retry policy.&lt;/p&gt;

&lt;h3 id=&quot;top-level-workflow-options&quot;&gt;Top-Level Workflow Options&lt;/h3&gt;

&lt;p&gt;Enable custom retry policy as top-level workflow options:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;startOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StartWorkflowOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;TaskQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taskQueueName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;WorkflowRunTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;WorkflowTaskTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;RetryPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retryPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executeWorkflowWithOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workflowFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, top-level workflow will be retried by the server on all types of
errors, except the ones defined in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NonRetryableErrorTypes&lt;/code&gt; in the retry policy.&lt;/p&gt;

&lt;h2 id=&quot;maximum-attempts&quot;&gt;Maximum Attempts&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;For how many times is the server going to retry?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When the custom retry policy is defined, the answer is obvious: the server is
going to retry &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MaximumAttempts&lt;/code&gt; times, defined in the policy. If the policy is
defined, but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MaximumAttempts&lt;/code&gt; is not set or set to 0, it means unlimited, and
we rely on activity &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScheduleToCloseTimeout&lt;/code&gt; to stop.&lt;/p&gt;

&lt;p&gt;When the custom retry policy is not defined, for activities, it means using the
default retry policy. The default RetryPolicy provided by the server specifies
(&lt;a href=&quot;https://github.com/temporalio/sdk-go/blob/9d143aa8634807e523b3ac199a0447b9cf147e72/internal/activity.go#L127-L131&quot;&gt;v1.10.0&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;InitialInterval of 1 second&lt;/li&gt;
  &lt;li&gt;BackoffCoefficient of 2.0&lt;/li&gt;
  &lt;li&gt;MaximumInterval of 100 x InitialInterval&lt;/li&gt;
  &lt;li&gt;MaximumAttempts of 0 (unlimited)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For top-level workflow or child workflow, it means that there are no
retry because by default, Temporal retries activies, but not workflows
(&lt;a href=&quot;https://docs.temporal.io/docs/go/retries/&quot;&gt;doc&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;writing-unit-tests&quot;&gt;Writing Unit Tests&lt;/h2&gt;

&lt;p&gt;Now we understand how the error retries mechanism works, it’s time to write some
tests. Yes, writing tests because we need it: we need it to assert the retry
behavior, to assert the number of retry attempts, to assert the completion and
the result of the workflow, etc.&lt;/p&gt;

&lt;p&gt;Here is an example for demonstrating that an applicaton error “oops” is
retryable and the activity is being executed twice: the first time failed and
the second time succeed.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WorkflowTestSuite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TestActivityError_ExplicitRetryableError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;// Given&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;executionCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anything&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Anything&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;executionCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executionCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temporal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewApplicationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oops&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, UnitTest!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;// When&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExecuteWorkflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyWorkflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UnitTest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;// Then&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsWorkflowCompleted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NoError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorkflowResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, UnitTest!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executionCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1st execution failed and 2nd execution succeed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/mincong-h/learning-go/pull/15&quot;&gt;https://github.com/mincong-h/learning-go/pull/15&lt;/a&gt; for more samples.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we saw the retryable and non-retryable application errors in
Temporal; we saw the non-retryable error tpes defined by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RetryPolicy&lt;/code&gt;; we saw
how to use retry policy as activity options, child workflow options, and
start workflow options for top-level workflows; and we also discuss the maximum
attempts for retries in different cases.&lt;/p&gt;

&lt;p&gt;I hope that this article gives you more insights about how error retries is done
in Temporal workflow. The source code of this article is also available on
&lt;a href=&quot;https://github.com/mincong-h/learning-go/pull/15&quot;&gt;GitHub&lt;/a&gt;.
You can subscribe to the &lt;a href=&quot;/feed.xml&quot;&gt;feed of my blog&lt;/a&gt;, follow me on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. Hope you enjoy this article, see you the next time!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Temporal, “Activity and Workflow Retries”, &lt;em&gt;Temporal Documentation&lt;/em&gt;, 2021.
&lt;a href=&quot;https://docs.temporal.io/docs/go/retries/&quot;&gt;https://docs.temporal.io/docs/go/retries/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Temporal, “Error Handling in Go”, &lt;em&gt;Temporal Documentation&lt;/em&gt;, 2021.
&lt;a href=&quot;https://docs.temporal.io/docs/go/error-handling/&quot;&gt;https://docs.temporal.io/docs/go/error-handling/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Temporal, “Testing and Debugging”, &lt;em&gt;Temporal Documentation&lt;/em&gt;, 2021.
&lt;a href=&quot;https://docs.temporal.io/docs/go/testing/&quot;&gt;https://docs.temporal.io/docs/go/testing/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Temporal, “Temporal Go SDK”, &lt;em&gt;GitHub&lt;/em&gt;, 2021.
&lt;a href=&quot;https://github.com/temporalio/sdk-go&quot;&gt;https://github.com/temporalio/sdk-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Temporal, “Temporal Go SDK Samples”, &lt;em&gt;GitHub&lt;/em&gt;, 2021.
&lt;a href=&quot;https://github.com/temporalio/samples-go&quot;&gt;https://github.com/temporalio/samples-go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="temporal" /><category term="temporal" /><category term="go" /><summary type="html">This article discusses the error retries in workflow engine Temporal, including retryable and non-retryable application errors, error types in retry policy, retry policy usage in different levels, maximum attempts, and more.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-pablo-garcia-saldana-lPQIndZz8Mo-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-pablo-garcia-saldana-lPQIndZz8Mo-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Internal Structure Of Snapshot Repository</title><link href="https://mincong.io/en/elasticsearch-snapshot-repository-structure/" rel="alternate" type="text/html" title="Internal Structure Of Snapshot Repository" /><published>2021-09-04T10:11:10+02:00</published><updated>2021-09-04T10:11:10+02:00</updated><id>https://mincong.io/en/elasticsearch-snapshot-repository-structure</id><content type="html" xml:base="https://mincong.io/en/elasticsearch-snapshot-repository-structure/">&lt;p class=&quot;info&quot;&gt;This article is translated with Google Translate and reviewed by Mincong.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;If you use an Elasticsearch cluster in production, I believe you must have heard of Elasticsearch’s &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/snapshot-restore-apis.html&quot;&gt;snapshot and restore feature&lt;/a&gt;, because it is an important means to ensure that cluster data is not lost. There are a lot of materials on the Internet about how to use Elasticsearch snapshots, but there are very few articles about its implementation. Today, I want to discuss with you the internal structure of the Elasticsearch snapshot repository. Knowing it can give us a better understanding of how Elasticsearch’s snapshots work, and can also provide more ideas for troubleshooting when there is a problem in production.&lt;/p&gt;

&lt;p&gt;After reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What is a snapshot repository?&lt;/li&gt;
  &lt;li&gt;Different files inside a snapshot repository&lt;/li&gt;
  &lt;li&gt;Learning more about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-N&lt;/code&gt; files&lt;/li&gt;
  &lt;li&gt;Learning more about the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Learning more about snapshot information files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without further ado, let’s get started right away!&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-snapshot-repository&quot;&gt;What is a snapshot repository?&lt;/h2&gt;

&lt;p&gt;A snapshot repository is a location where Elasticsearch stores snapshots. One snapshot repository can store multiple snapshots. Snapshots are how Elasticsearch backups your data. You can create a snapshot for one single index or multiple indices. Inside a snapshot repository, snapshots are incremental: new snapshots will only snapshot those parts that were not snapshotted in the previous snapshot to avoid wasting time and storage space. There are many types of snapshot repositories: they can be local repository or remote repositories for  cloud providers, such as AWS S3, Google Cloud Storage, Azure Blob Storage, Aliyun OSS, etc.&lt;/p&gt;

&lt;h2 id=&quot;different-files-inside-a-snapshot-repository&quot;&gt;Different files inside a snapshot repository&lt;/h2&gt;

&lt;p&gt;Below, let’s take a look the different files stored inside a snapshot repository. Here is an excerpt from the &lt;a href=&quot;https://github.com/elastic/elasticsearch/blob/7.12/server/src/main/java/org/elasticsearch/repositories/blobstore/package-info.java&quot;&gt;Javadoc of Elasticsearch 7.12 about Snapshot Repository&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; STORE_ROOT
 |- index-N           - JSON serialized {@link org.elasticsearch.repositories.RepositoryData} containing a list of all snapshot ids
 |                      and the indices belonging to each snapshot, N is the generation of the file
 |- index.latest      - contains the numeric value of the latest generation of the index file (i.e. N from above)
 |- incompatible-snapshots - list of all snapshot ids that are no longer compatible with the current version of the cluster
 |- snap-20131010.dat - SMILE serialized {@link org.elasticsearch.snapshots.SnapshotInfo} for snapshot &quot;20131010&quot;
 |- meta-20131010.dat - SMILE serialized {@link org.elasticsearch.cluster.metadata.Metadata } for snapshot &quot;20131010&quot;
 |                      (includes only global metadata)
 |- snap-20131011.dat - SMILE serialized {@link org.elasticsearch.snapshots.SnapshotInfo} for snapshot &quot;20131011&quot;
 |- meta-20131011.dat - SMILE serialized {@link org.elasticsearch.cluster.metadata.Metadata } for snapshot &quot;20131011&quot;
 .....
 |- indices/ - data for all indices
    |- Ac1342-B_x/ - data for index &quot;foo&quot; which was assigned the unique id Ac1342-B_x (not to be confused with the actual index uuid)
    |  |             in the repository
    |  |- meta-20131010.dat - JSON Serialized {@link org.elasticsearch.cluster.metadata.IndexMetadata} for index &quot;foo&quot;
    |  |- 0/ - data for shard &quot;0&quot; of index &quot;foo&quot;
    |  |  |- __1                      \  (files with numeric names were created by older ES versions)
    |  |  |- __2                      |
    |  |  |- __VPO5oDMVT5y4Akv8T_AO_A |- files from different segments see snap-* for their mappings to real segment files
    |  |  |- __1gbJy18wS_2kv1qI7FgKuQ |
    |  |  |- __R8JvZAHlSMyMXyZc2SS8Zg /
    |  |  .....
    |  |  |- snap-20131010.dat - SMILE serialized {@link org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardSnapshot} for
    |  |  |                      snapshot &quot;20131010&quot;
    |  |  |- snap-20131011.dat - SMILE serialized {@link org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardSnapshot} for
    |  |  |                      snapshot &quot;20131011&quot;
    |  |  |- index-123         - SMILE serialized {@link org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardSnapshots} for
    |  |  |                      the shard (files with numeric suffixes were created by older versions, newer ES versions use a uuid
    |  |  |                      suffix instead)
    |  |
    |  |- 1/ - data for shard &quot;1&quot; of index &quot;foo&quot;
    |  |  |- __1
    |  |  |- index-Zc2SS8ZgR8JvZAHlSMyMXy - SMILE serialized {@code BlobStoreIndexShardSnapshots} for the shard
    |  |  .....
    |  |
    |  |-2/
    |  ......
    |
    |- 1xB0D8_B3y/ - data for index &quot;bar&quot; which was assigned the unique id of 1xB0D8_B3y in the repository
    ......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Organize them again in a table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;File path&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;explanation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-N&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; serialized in JSON format, including all snapshot IDs and their corresponding indexes. N represents the generation of this file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The file is a pointer that represents the last generation index file in digital form, which is the number N mentioned above. Here N is a hexadecimal number, for example, the index of the 100th generation (decimal), and finally represented by 64 in hexadecimal, because 64 = 16*6 + 4.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;incompatible-snapshots&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;A list of all snapshot IDs that are no longer compatible with the current cluster version&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snap-20131010.dat&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SnapshotInfo&lt;/code&gt; serialized in SMILE format, used to represent the information corresponding to the snapshot 20131010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;meta-20131010.dat&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Metadata&lt;/code&gt; serialized in SMILE format, used to represent the metadata corresponding to the snapshot 20131010  (includes only global metadata)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Data for all indices&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Index the data corresponding to foo. The UUID of the index in the repository is Ac1342-B_x. But do not confuse with the UUID of the index.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/meta-20131010.dat&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Index foo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IndexMetadata&lt;/code&gt; serialized in JSON format&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Index foo data corresponding to shard 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/__1&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Files ending in numbers were created by an older version of Elasticsearch&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/__2&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Same as above&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Indices / Ac1342-B_x / 0 / __ VPO5oDMVT5y4Akv8T_AO_A&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;segment files, with specific mappings real segment, see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snap-*&lt;/code&gt; file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/__1gbJy18wS_2kv1qI7FgKuQ&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Same as above&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/__R8JvZAHlSMyMXyZc2SS8Zg&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Same as above&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/snap-20131010.dat&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Snapshot 20131010 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobStoreIndexShardSnapshot&lt;/code&gt; serialized in SMILE format&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/snap-20131011.dat&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Snapshot 20131011 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobStoreIndexShardSnapshot&lt;/code&gt; serialized in SMILE format&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indices/Ac1342-B_x/0/index-123&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Shard 0 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobStoreIndexShardSnapshots&lt;/code&gt; serialized in SMILE format. Files with numeric suffixes were created by older versions, newer ES versions use a uuid suffix instead&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;data-preparation&quot;&gt;Data Preparation&lt;/h2&gt;

&lt;p&gt;Next, let’s take a look at some of the more important files.&lt;/p&gt;

&lt;p&gt;But before getting started, we need to prepare the data locally: by starting Elasticsearch, and creating some data and snapshots.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;es_repo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/es-backup/blog-snapshot-repo-structure/&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Start Elasticsearch&lt;/span&gt;
docker run &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9200:9200 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9300:9300 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;discovery.type=single-node&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cluster.name=es-docker-cluster&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path.repo=/opt/elasticsearch/backup&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;es_repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/opt/elasticsearch/backup&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  docker.elastic.co/elasticsearch/elasticsearch:7.12.0

&lt;span class=&quot;c&quot;&gt;# Create document&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT localhost:9200/my_index/_doc/1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;msg&quot;: &quot;Hello Elasticsearch&quot;}'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create snapshot repository&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT localhost:9200/_snapshot/my_repo &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
  &quot;type&quot;: &quot;fs&quot;,
  &quot;settings&quot;: {
    &quot;location&quot;: &quot;my_repo&quot;
  }
}'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create snapshot&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT localhost:9200/_snapshot/my_repo/my_snapshot_1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
  &quot;indices&quot;: &quot;my_index&quot;,
  &quot;include_global_state&quot;: false,
  &quot;metadata&quot;: {
    &quot;taken_by&quot;: &quot;Mincong&quot;,
    &quot;taken_because&quot;: &quot;https://mincong.io is the best blog for learning Elasticsearch&quot;
  }
}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then enter the local folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog-snapshot-repo-structure&lt;/code&gt;, make sure the repository &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_repo&lt;/code&gt; and the files in it are ready:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  blog-snapshot-repo-structure find my_repo
my_repo
my_repo/index-0
my_repo/indices
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/0
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/0/index-MwjmFzyOT_2NI6DdXLcsNw
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/0/__IlzZcMdOSkC-j6xx0Qj04A
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/0/snap-2hiUzvH3RPCp9iOeiTa6TQ.dat
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/0/__jQbQk7YYTwW8G5gL_RtR8w
my_repo/indices/Uxom82JcSfORXgbtZ4jLSg/meta-N1BHtXsBYxjWXi8lXhTR.dat
my_repo/index.latest
my_repo/meta-2hiUzvH3RPCp9iOeiTa6TQ.dat
my_repo/snap-2hiUzvH3RPCp9iOeiTa6TQ.dat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we can further explore the contents of the repository!&lt;/p&gt;

&lt;h2 id=&quot;file-index-n&quot;&gt;File index-N&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;index-0 | jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;min_version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;7.12.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;C87ijmZURAK3ij8MsAaDAw&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cluster_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aSNpPgDAShyYAiKhsun6IA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;snapshots&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my_snapshot_1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2hiUzvH3RPCp9iOeiTa6TQ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index_metadata_lookup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Uxom82JcSfORXgbtZ4jLSg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Uz7B9HV2SJ6peiLiUMJhyg-_na_-1-2-1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;7.12.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my_index&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Uxom82JcSfORXgbtZ4jLSg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;snapshots&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2hiUzvH3RPCp9iOeiTa6TQ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;shard_generations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;MwjmFzyOT_2NI6DdXLcsNw&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index_metadata_identifiers&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Uz7B9HV2SJ6peiLiUMJhyg-_na_-1-2-1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;N1BHtXsBYxjWXi8lXhTR&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl &quot;localhost:9200/_cat/indices/my_index?v&quot;
health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   my_index Uz7B9HV2SJ6peiLiUMJhyg   1   1          1            0      3.9kb          3.9kb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-0&lt;/code&gt; represents generation 0 of the snapshot repository. It is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; serialized in JSON format, which contains all the snapshot IDs and their corresponding indexes. The UUID of the index &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_index&lt;/code&gt; in the repository is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Uxom82JcSfORXgbtZ4jLSg&lt;/code&gt;, and its corresponding UUID in the cluster is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Uz7B9HV2SJ6peiLiUMJhyg&lt;/code&gt;. This index is referenced by a snapshot, which is the snapshot &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_snapshot_1&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2hiUzvH3RPCp9iOeiTa6TQ&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;file-indexlatest&quot;&gt;File index.latest&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; file is a pointer that represents the last-generation index file in numerical form, which is the number N mentioned above. Here N is a hexadecimal number, for example, the index of the 100th generation (decimal) is represented as 64 in hexadecimal, because 64 = 16*6 + 4. In the repository &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_repo&lt;/code&gt; prepared above, since only one snapshot was taken, it is the 0th generation:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ hexdump index.latest
0000000 00 00 00 00 00 00 00 00
0000008
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s generate more documents and create more snapshots, so that we can better view the changes in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;2..20&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Creating document &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/my_index/_doc/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello Elasticsearch &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;}&quot;&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Creating snapshot &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_snapshot/my_repo/my_snapshot_&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{
    &quot;indices&quot;: &quot;my_index&quot;,
    &quot;include_global_state&quot;: false,
    &quot;metadata&quot;: {
      &quot;taken_by&quot;: &quot;Mincong&quot;,
      &quot;taken_because&quot;: &quot;https://mincong.io is the best blog for learning Elasticsearch&quot;
    }
  }'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this time, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; has become the 19th generation (starting from the 0 generation, so it is actually the 20th generation). 19 = 16*1 + 3&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ hexdump index.latest
0000000 00 00 00 00 00 00 00 00 13
0000008
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ echo'ibase=16; 13' | bc
19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But how does Elasticsearch load the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-N&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; files?&lt;/p&gt;

&lt;p&gt;Loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; and the mapping of index name to its repository &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IndexId&lt;/code&gt;, which is done by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobStoreRepository.getRepositoryData()&lt;/code&gt;. The specific implementation is as follows (&lt;a href=&quot;https://github.com/elastic/elasticsearch/blob/7.12/server/src/main/java/org/elasticsearch/repositories/blobstore/package-info.java&quot;&gt;extracted from Javadoc&lt;/a&gt;):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Step 1: Storing repository data
    &lt;ol&gt;
      &lt;li&gt;The blobstore repository stores the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; in blobs named with incrementing suffix &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/index-N&lt;/code&gt; directly under the repository’s root.&lt;/li&gt;
      &lt;li&gt;For each &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobStoreRepository&lt;/code&gt; an entry of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryMetadata&lt;/code&gt; exists in the cluster state. It tracks the current valid generation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; as well as the latest generation that a write was attempted for.&lt;/li&gt;
      &lt;li&gt;The blobstore also stores the most recent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; as a 64bit long in the blob &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/index.latest&lt;/code&gt; directly under the repository’s root.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Step 2: Determine the value of N
    &lt;ol&gt;
      &lt;li&gt;First, find the most recent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; by getting a list of all index-N blobs through listing all blobs with prefix “index-“ under the repository root and then selecting the one with the highest value for N.&lt;/li&gt;
      &lt;li&gt;If this operation fails because the repository’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlobContainer&lt;/code&gt; does not support list operations (in the case of read-only repositories), read the highest value of N from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; blob.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Step 3: Deserialization
    &lt;ol&gt;
      &lt;li&gt;Use the just determined value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; and get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/index-N&lt;/code&gt; blob and deserialize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData&lt;/code&gt; from it.&lt;/li&gt;
      &lt;li&gt;If no value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt; could be found since neither an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt; nor any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-N&lt;/code&gt; blobs exist in the repository, it is assumed to be empty and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RepositoryData#EMPTY&lt;/code&gt; is returned.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;repo-level-snapshot-info&quot;&gt;Repo-Level Snapshot Info&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SnapshotInfo&lt;/code&gt; serialized in SMILE format is used to represent the information related to the snapshot. The following is the snapshot info for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_snapshot_20&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snap-WbjaeQk1T4u2JrGfsWlHsw.dat&lt;/code&gt;). By the way, it is worth mentioning that there is no way to directly inspect files in SMILE format (for example, using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;). You need a special demodulation tool, such as &lt;a href=&quot;https://github.com/cowtowncoder/Jackformer&quot;&gt;cowtowncoder/Jackformer&lt;/a&gt;. After converting to JSON, we obtain the results as:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// decoded version of repository-level snapshot info&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// $STORE_ROOT/snap-WbjaeQk1T4u2JrGfsWlHsw.dat&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my_snapshot_20&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WbjaeQk1T4u2JrGfsWlHsw&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7120099&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my_index&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data_streams&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SUCCESS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;include_global_state&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;taken_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mincong&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;taken_because&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://mincong.io is the best blog for learning Elasticsearch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;start_time&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1630835219489&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;end_time&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1630835222295&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;successful_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failures&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;feature_states&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;shard-level-snapshot-info&quot;&gt;Shard-Level Snapshot Info&lt;/h2&gt;

&lt;p&gt;We can do the same thing for shard-level snapshot information, such as this one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snap-WbjaeQk1T4u2JrGfsWlHsw.dat&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// decoded version of shard-level snapshot info&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// $STORE_ROOT/indices/Uxom82JcSfORXgbtZ4jLSg/0/snap-WbjaeQk1T4u2JrGfsWlHsw.dat&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;my_snapshot_20&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index_version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;start_time&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1630835221092&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number_of_files&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;__5NSZ0_cESkq6xuZO0KsflA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;physical_name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_b.cfe&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;479&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checksum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;10v9n85&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;part_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;written_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8.8.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;__409YH-VqThKfHoKO64Jw3A&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;physical_name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_c.cfs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3921&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checksum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aro23l&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;part_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;written_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8.8.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;__-y2SRorARLmutzx_8R0pdA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;physical_name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_7.cfs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2954&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checksum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;40ricv&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;part_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;written_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8.8.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;v__eBFWiPBIRqetvzlHocSdmg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;physical_name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_c.si&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;405&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checksum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1raps0i&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;part_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;written_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8.8.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;meta_hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;P9dsFxNMdWNlbmU4NlNlZ21lbnRJbmZvAAAAAIZgkzI3PmaEHCzgC37ywlIAAAAACAAAAAgAAAAAAQAAAAgAAAAIAAAAAAAAAA4BDAJvcwVMaW51eAxqYXZhLnZlcnNpb24GMTUuMC4xB29zLmFyY2gFYW1kNjQUamF2YS5ydW50aW1lLnZlcnNpb24IMTUuMC4xKzkGc291cmNlBW1lcmdlCm9zLnZlcnNpb24QNS4xMC4yNS1saW51eGtpdAtqYXZhLnZlbmRvcgxBZG9wdE9wZW5KREsPamF2YS52bS52ZXJzaW9uCDE1LjAuMSs5Dmx1Y2VuZS52ZXJzaW9uBTguOC4wE21lcmdlTWF4TnVtU2VnbWVudHMCLTELbWVyZ2VGYWN0b3ICMTAJdGltZXN0YW1wDTE2MzA4MzUyMTg2MDQDBl9jLmNmcwVfYy5zaQZfYy5jZmUBH0x1Y2VuZTg3U3RvcmVkRmllbGRzRm9ybWF0Lm1vZGUKQkVTVF9TUEVFRADAKJPoAAAAAAAAAADkIQAS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;v__H3vg9g8aRsCMh3Ni-GypSA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;physical_name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_b.si&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;367&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;checksum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1ms49nm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;part_size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;written_by&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8.8.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;meta_hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;P9dsFxNMdWNlbmU4NlNlZ21lbnRJbmZvAAAAAIZgkzI3PmaEHCzgC37ywlEAAAAACAAAAAgAAAAAAQAAAAgAAAAIAAAAAAAAAAMBCgJvcwVMaW51eAtqYXZhLnZlbmRvcgxBZG9wdE9wZW5KREsMamF2YS52ZXJzaW9uBjE1LjAuMQ9qYXZhLnZtLnZlcnNpb24IMTUuMC4xKzkObHVjZW5lLnZlcnNpb24FOC44LjAHb3MuYXJjaAVhbWQ2NBRqYXZhLnJ1bnRpbWUudmVyc2lvbggxNS4wLjErOQZzb3VyY2UFZmx1c2gKb3MudmVyc2lvbhA1LjEwLjI1LWxpbnV4a2l0CXRpbWVzdGFtcA0xNjMwODM1MjE5MTkzAwZfYi5jZmUGX2IuY2ZzBV9iLnNpAR9MdWNlbmU4N1N0b3JlZEZpZWxkc0Zvcm1hdC5tb2RlCkJFU1RfU1BFRUQAwCiT6AAAAAAAAAAA09nN4g==&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to expand from this article?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you want to know more about the internal file format or loading mechanism of snapshot repository, you can check the &lt;a href=&quot;https://github.com/elastic/elasticsearch/blob/7.12/server/src/main/java/org/elasticsearch/repositories/blobstore/package-info.java&quot;&gt;official Javadoc of Elasticsearch (7.12) of the snapshot repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you want to learn more about how Snapshot Repository works, you can check out &lt;a href=&quot;https://steve-mushero.medium.com/how-elasticsearch-snapshots-work-3824fdfc4493&quot;&gt;How Elasticsearch Snapshots Work&lt;/a&gt; by Steve Mushero on Medium&lt;/li&gt;
  &lt;li&gt;If you want to know more about SMILE format, you can check Wikipedia &lt;a href=&quot;https://en.wikipedia.org/wiki/Smile_%28data_interchange_format%29&quot;&gt;Smile (data interchange format)&lt;/a&gt; or check Ayush Gupta’s article on Medium &lt;a href=&quot;https://medium.com/code-with-ayush/understanding-smile-a-data-format-based-on-json-29972a37d376&quot;&gt;Understanding Smile — A data format based on JSON&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we walked into Elasticsearch’s snapshot repository and saw its internal structure. We also learn more about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index-N&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.latest&lt;/code&gt;, and some other files related to snapshots. I hope that by knowing these files, it will give you a have a better understanding of Elasticsearch’s “snapshot and restore” feature, and also give you more ideas for troubleshooting when there is an issue on production. Finally, we briefly saw some resources to expand out. You can subscribe to the &lt;a href=&quot;/feed.xml&quot;&gt;feed of my blog&lt;/a&gt;, follow me on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. Hope you enjoy this article, see you the next time!&lt;/p&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="java" /><summary type="html">This article takes you to the Elasticsearch snapshot repository to explore its internal structure and understand the contents and uses of different files.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-dmitrij-paskevic-YjVa-F9P9kk-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-dmitrij-paskevic-YjVa-F9P9kk-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Elasticsearch Settings</title><link href="https://mincong.io/en/elasticsearch-settings/" rel="alternate" type="text/html" title="Elasticsearch Settings" /><published>2021-08-21T18:07:13+02:00</published><updated>2021-08-21T18:07:13+02:00</updated><id>https://mincong.io/en/elasticsearch-settings</id><content type="html" xml:base="https://mincong.io/en/elasticsearch-settings/">&lt;p class=&quot;info&quot;&gt;This article is translated with Google Translate and reviewed by Mincong.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;If you are using an Elasticsearch cluster, you will probably need to configure it. No matter what your use-case is, no matter which position you hold in the company, as long as you use Elasticsearch, you always need to have a certain understanding of its configuration, and adjust them to better meet your needs. But on the other hand, there are so many settings of Elasticsearch that it is a little bit difficult to start. So I want to write this article to discuss with you how to understand the different types of settings of Elasticsearch. After reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The scope of settings (cluster, index, node, snapshot repository, etc.)&lt;/li&gt;
  &lt;li&gt;Cluster settings&lt;/li&gt;
  &lt;li&gt;Index settings&lt;/li&gt;
  &lt;li&gt;Node settings&lt;/li&gt;
  &lt;li&gt;curl usage examples&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article is based on Elasticsearch 7, the specific content may be slightly different from the version you are using. Now, let’s get started!&lt;/p&gt;

&lt;h2 id=&quot;scope-of-settings&quot;&gt;Scope Of Settings&lt;/h2&gt;

&lt;p&gt;Different settings in Elasticsearch can be applied to different scopes.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Scope&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;API&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cluster&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_cluster/settings&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;These settings will be applied to all nodes in the entire cluster, for example, (&lt;a href=&quot;https://www.elastic.co /guide/en/elasticsearch/reference/7.x/modules-cluster.html&quot; title=&quot;cluster-level shard allocation and routing&quot;&gt;cluster-level shard allocation and routing settings&lt;/a&gt;) are cluster-level settings.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Index / Data stream / Alias ​​&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/{target}/_settings&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;These settings will be applied to the selected target. The target can be one or more indexes, data streams. Multiple targets need to be separated by commas.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
      &lt;td&gt;The node settings mainly refer to the configuration of the role of the node: master / data / ingest / ml / … This can be achieved by modifying the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Snapshot repository (plugin required)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_snapshot/{repository}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Plugins also have their own settings. For example, the snapshot repository plugin provides settings for each snapshot repository, such as the location of the repository, the speed of snapshot creation, and the speed of snapshot restore.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;cluster-settings&quot;&gt;Cluster Settings&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/cluster-update-settings.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/cluster-update-settings.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /_cluster/settings
PUT /_cluster/settings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The cluster settings can be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Persistent, which is still valid after the entire cluster restarts&lt;/li&gt;
  &lt;li&gt;Transient, that is, invalid after the entire cluster restarts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Examples of persistent settings (JSON starts with “persistent”):&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;persistent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;indices&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recovery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;max_bytes_per_sec&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20mb&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example of transient setting (JSON starts with “transient”):&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;transient&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;indices&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;recovery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;max_bytes_per_sec&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20mb&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Precedence of cluster settings:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;transient cluster settings&lt;/li&gt;
  &lt;li&gt;Persistent cluster settings&lt;/li&gt;
  &lt;li&gt;Settings in the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Default settings&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;According to the official documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/cluster-update-settings.html&quot; title=&quot;Cluster update settings API&quot;&gt;Cluster update settings API&lt;/a&gt;, the cluster-wide settings are recommended to be set through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;settings&lt;/code&gt; API. Only use the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt; to handle local configuration. In this way, you can ensure that the configuration of all nodes in the cluster is the same. Otherwise, you may accidentally set different configurations on different nodes, and such differences are very difficult to detect.&lt;/p&gt;

&lt;p&gt;There are two types of cluster settings: static and dynamic:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Static&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;These settings are only applied on nodes that have not been started or have been shut down, and are configured by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt;. Each node must be set individually.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Dynamic&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;These settings can be modified in a running cluster through the cluster update settings API.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Examples of static and dynamic settings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210821-type-of-settings.png&quot; alt=&quot;Static and dynamic type example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Elasticsearch has many cluster-wide settings: security settings, shard allocation and routing settings, index lifecycle management (ILM) settings, logging settings, network settings, etc. We are not going into details here, but you can check the official documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/settings.html&quot; title=&quot;Configuring Elasticsearch&quot;&gt;Configuring Elasticsearch&lt;/a&gt; and its related subpages for more information.&lt;/p&gt;

&lt;h2 id=&quot;index-settings&quot;&gt;Index Settings&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-update-settings.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-update-settings.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /{target}/_settings
PUT /{target}/_settings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These settings will be applied to the selected target. The target can be one or more indexes, data streams, alias. Multiple targets need to be separated by commas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Index settings are divided into two types – static and dynamic:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Static&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;These settings can only be modified when the index is created or after the index is closed.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Dynamic&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;These settings can be modified via the update-index-settings API in a live index.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Elasticsearch has many index-wide settings: number of shards, compression method, startup check, refresh, etc. We are not going into details here, but you can check the official document &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/index-modules.html&quot; title=&quot;Index modules&quot;&gt;Index modules&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h2 id=&quot;node-settings&quot;&gt;Node Settings&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/modules-node.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/modules-node.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The node settings mainly refer to the configuration of node’s role: master / data / ingest / ml / … This can be achieved by modifying the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt;. The most important roles should be: master-eligible node (participating in the master election, which is vital to maintaining the existence of the cluster), data node (storing data), coordinating-only node (tasks coordination, similar to load balancing). See the official document above for details.&lt;/p&gt;

&lt;p&gt;For example, in the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt;, you can set a node as a data node:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;node.data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;curl-cheatsheet&quot;&gt;curl cheatsheet&lt;/h2&gt;

&lt;p&gt;In the above article, we looked at different types of settings. But in actual work, it is not enough to just understand their types. You may need to query, update, or delete some settings to meet your actual needs. Next, let’s take a look at how to use curl to operate dynamic cluster and index settings.&lt;/p&gt;

&lt;p&gt;Examples of cluster-level settings:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# list cluster-wide settings (explicitly defined)&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list cluster-wide settings (explicitly defined) in flat format&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings?flat_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list cluster-wide settings (including defaults)&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings?include_defaults&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list cluster-wide settings (including defaults) in flat format&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings?include_defaults&amp;amp;flat_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# update a cluster-wide setting&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;persistent.indices.recovery.max_bytes_per_sec&quot;: &quot;50mb&quot;
}
'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# reset a cluster-wide setting to the default value&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cluster/settings&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;persistent.indices.recovery.max_bytes_per_sec&quot;: null
}
'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example of index level setting:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# list index-wide settings (explicitly defined)&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (explicitly defined) for index1 and index2&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1,index2/_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (explicitly defined) for indices starting with &quot;index&quot;&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index*/_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (explicitly defined) for all indices&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_all/_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (explicitly defined) in flat format&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings?flat_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (including defaults)&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings?include_defaults&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list index-wide settings (including defaults) in flat format&lt;/span&gt;
curl &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings?include_defaults&amp;amp;flat_settings&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# update an index-wide setting for index1&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;index&quot;: {
    &quot;number_of_replicas&quot;: 2
  }
}
'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# reset an index-wide setting to the default value&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;index&quot;: {
    &quot;refresh_interval&quot;: null
  }
}
'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For static index settings, you need to close the index first, modify the settings, and then start:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_close?wait_for_active_shards=0&quot;&lt;/span&gt;

curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_settings&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;analysis&quot;: {
    &quot;analyzer&quot;: {
      &quot;content&quot;: {
        &quot;type&quot;: &quot;custom&quot;,
        &quot;tokenizer&quot;: &quot;whitespace&quot;
      }
    }
  }
}
'&lt;/span&gt;

curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/index1/_open&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going further&lt;/h2&gt;

&lt;p&gt;How to go further from this article?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you want to know more about cluster settings, please check the official document &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/settings.html&quot; title=&quot;Configuring Elasticsearch&quot;&gt;Configuring Elasticsearch&lt;/a&gt; and its related subpages.&lt;/li&gt;
  &lt;li&gt;If you want to know more about node settings, please check the official document &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/modules-node .html&quot; title=&quot;Configuring Elasticsearch&amp;gt; Node&quot;&gt;Configuring Elasticsearch&amp;gt; Node&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;If you want to know more about index settings, please check the official document &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/index-modules.html&quot; title=&quot;Index modules&quot;&gt;Index modules&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;When using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; to query or modify the settings of Elasticsearch, it is recommended to use it with the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt;. It can help you quickly modify the JSON content and get the results you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we saw cluster settings, node settings, and index settings in Elasticsearch. We discussed the precedence of the settings. We see that the settings are divided into two types: static and dynamic. Static settings need to be modified in a static state, and dynamic settings can be modified directly through the API in the running state. We saw how to identify static and dynamic settings in the official documentation. We also listed some commonly used commands through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt;. Finally, I also shared some resources so that you can go further from here. I hope this article can bring you some thoughts and give you a better understanding of Elasticsearch. You can subscribe to the &lt;a href=&quot;/feed.xml&quot;&gt;feed of my blog&lt;/a&gt;, follow me on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. Hope you enjoy this article, see you the next time!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Opster Team, “Elasticsearch Settings”, &lt;em&gt;Opster&lt;/em&gt;, 2021. &lt;a href=&quot;https://opster.com/elasticsearch-glossary/elasticsearch-settings/&quot;&gt;https://opster.com/elasticsearch-glossary/elasticsearch-settings/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Elasticsearch, “Index modules”, &lt;em&gt;Elastic&lt;/em&gt;, 2021. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/index-modules.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/index-modules.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Elasticsearch, “Node”, &lt;em&gt;Elastic&lt;/em&gt;, 2021. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/modules-node.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/modules-node.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Elasticsearch, “Configuring Elasticsearch”, &lt;em&gt;Elastic&lt;/em&gt;, 2021. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/settings.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/settings.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vincent Duan, “The difference between Elasticsearch Transient and Persistent”, &lt;em&gt;CSDN&lt;/em&gt;, 2020. &lt;a href=&quot;https://blog.csdn.net/vincent_duan/article/details/103927725&quot;&gt;https://blog.csdn.net/vincent_duan/article/details/103927725&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><summary type="html">This article describes the different types of settings of Elasticsearch: cluster settings, index settings, node settings, the difference between static and dynamic settings, and some commonly used curl commands.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-anthony-roberts-82wJ10pX1Fw-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-anthony-roberts-82wJ10pX1Fw-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">How to prevent data loss in Elasticsearch?</title><link href="https://mincong.io/en/prevent-data-loss-in-elasticsearch/" rel="alternate" type="text/html" title="How to prevent data loss in Elasticsearch?" /><published>2021-07-31T09:50:49+02:00</published><updated>2021-07-31T09:50:49+02:00</updated><id>https://mincong.io/en/prevent-data-loss-in-elasticsearch</id><content type="html" xml:base="https://mincong.io/en/prevent-data-loss-in-elasticsearch/">&lt;p class=&quot;info&quot;&gt;This article is translated with Google Translate and reviewed by Mincong.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Nowadays, data reliability is a very important thing for every enterprise. Only when we have reliable data can we rely on data to create efficient and easy-to-use software. In the real-time, intelligent, and globalized application scenarios of data, ensuring the reliability of data is even more important. Today, I want to discuss with you some of my views on how to avoid data loss in Elasticsearch.&lt;/p&gt;

&lt;p&gt;After reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When will the data be lost?&lt;/li&gt;
  &lt;li&gt;Increase the number of replica shards&lt;/li&gt;
  &lt;li&gt;Snapshot and restore&lt;/li&gt;
  &lt;li&gt;Use RAID disk array&lt;/li&gt;
  &lt;li&gt;Data queue (message queue) integration&lt;/li&gt;
  &lt;li&gt;The primary and secondary shards have different nodes&lt;/li&gt;
  &lt;li&gt;Avoid using a single availability zone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without further ado, let’s get started right away!&lt;/p&gt;

&lt;h2 id=&quot;when-will-the-data-be-lost&quot;&gt;When Will The Data Be Lost?&lt;/h2&gt;

&lt;p&gt;The health status of the Elasticsearch cluster is divided into three levels (colors): green, yellow, and red.&lt;/p&gt;

&lt;p&gt;At the shard level:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The red status means that this shard cannot be allocated to the cluster&lt;/li&gt;
  &lt;li&gt;Yellow status means that the primary shard has been allocated, but one or more replica shards have not been allocated&lt;/li&gt;
  &lt;li&gt;The green status means that all shards have been successfully allocated&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the index level, its health status is determined by the worst shard status. At the cluster level, its health status is determined by the worst index status.&lt;/p&gt;

&lt;p&gt;So when the cluster is in the red state, it means that some shards have not been initialized normally or the existing data has been corrupted or lost. The focus of this article is to avoid the yellow or red state and make the cluster stay in the green state as much as possible.&lt;/p&gt;

&lt;h2 id=&quot;increase-the-number-of-replica-shards&quot;&gt;Increase The Number Of Replica Shards&lt;/h2&gt;

&lt;p&gt;Increasing the number of replicas is a simple way to improve data reliability. When a shard is placed on multiple machines in the cluster, if a single machine is damaged, the other machines are unlikely to be affected. We still have N-1 shards available. The higher the number of replica shards, the lower the possibility of data loss. Through &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-update-settings.html&quot; title=&quot;Update index settings API (7. x)&quot;&gt;Update index settings API (7.x)&lt;/a&gt; You can adjust the number of copy fragments. For example, if you need one primary shard and two replica shards, you can send the following HTTP request to the cluster:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT /my-index-000001/_settings

{
  &quot;index&quot;: {
    &quot;number_of_replicas&quot;: 2
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Although the method of increasing the number of shards is easy to use, it also has obvious shortcomings. That is … expensive! For example, we have a total of 6TB of cluster storage space. The one-primary and one-replica plan can store 6TB / 2 = 3TB of data, while the one-primary and two-replicas plan can only store 6TB / 3 = 2TB of data, which reduces the utilization rate by 33 % and increases the cost by 50%.&lt;/p&gt;

&lt;h2 id=&quot;snapshot-and-restore&quot;&gt;Snapshot And Restore&lt;/h2&gt;

&lt;p&gt;Regardless of the data storage software, it is important to back up your data regularly. The Elasticsearch replicas mentioned above provide high reliability; they allow you to tolerate sporadic node loss without interrupting service. However, the copy does not provide protection against disaster. In this case, what you need is a real backup of the cluster — a complete copy when something does go wrong. Elasticsearch’s Snapshot And Restore feature is a good way to avoid data loss. Elasticsearch backs up the current cluster state and data to a snapshot repository. This process is incremental: the first snapshot is a full snapshot, and subsequent snapshots retain the difference between the existing snapshot and the new data.&lt;/p&gt;

&lt;p&gt;Snapshots support different types of repository, which are implemented by installing plugins in the cluster. The officially supported plugins in Elasticsearch 7 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.x/repository-s3.html&quot; title=&quot;Amazon S3 Warehouse Plugin&quot;&gt;Amazon S3 Repository Plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.x/repository-azure.html&quot; title=&quot;Azure Warehouse Plugin&quot;&gt;Azure Repository Plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.x/repository-hdfs.html&quot; title=&quot;Hadoop HDFS Warehouse Plugin&quot;&gt;Hadoop HDFS Repository Plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.x/repository-gcs.html&quot; title=&quot;Google Cloud Storage Warehouse Plugin&quot;&gt;Google Cloud Storage Repository Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unofficial plugins are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BigDataBoutique/elasticsearch-repository-swift&quot; title=&quot;Openstack Swift Repository Plugin&quot;&gt;Openstack Swift Repository Plugin&lt;/a&gt;, developed and maintained by Wikimedia Foundation and BigData Boutique.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/elasticsearch-repository-oss&quot; title=&quot;Alibaba Cloud Repository Plugin&quot;&gt;Alibaba Cloud Repository Plugin&lt;/a&gt;, developed and maintained by Alibaba Cloud.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The benefits of using snapshots are mainly to reduce the cost of backup, to protect against disaster, and to have a complete copy in the event of a problem. Another advantage is that it can be restored across clusters, so you can use the snapshot and restore feature to make customized solutions, such as a data storage system that separates hot and cold storage. The limitations of using snapshots are: 1. The entire setup process is complicated, requires a certain understanding of your cloud provider, and needs to build a storage bucket (creation, setting permissions, monitoring, etc.); 2. It can only be used on platforms that support plug-ins. That is, AWS / Google / Azure / Aliyun / Tencent, etc.; 3. Data cannot be restored without snapshots.&lt;/p&gt;

&lt;h2 id=&quot;use-raid&quot;&gt;Use RAID&lt;/h2&gt;

&lt;p&gt;RAID (Redundant Array of Independent Disks) stands for Redundant Array of Independent Disks, abbreviated as “disk array”. In fact, it uses multiple independent disks to form a large disk system to achieve better storage than a single disk. Performance and higher reliability. Common solutions are: RAID0 / RAID1 / RAID5 / RAID6 / RAID10. Different scenarios have different expected performance in terms of data loss, performance, and downtime. Its essence is to achieve data reliability through different types of double writing or verification at the disk level of a single machine. The official Elasticsearch article &lt;a href=&quot;https://www.elastic.co/blog/how-to-design-your-elasticsearch-data-storage-architecture-for-scale&quot;&gt;How to design your Elasticsearch data storage architecture for scale&lt;/a&gt; written by Matt Davis discussed in detail the pros and cons of RAID0 / RAID1 / RAID5 / RAID6. Please read that article for more details.&lt;/p&gt;

&lt;p&gt;I personally think that this solution is not suitable for enterprise use, because it is only effective for stand-alone disks. For an enterprise-level data platform, more considerations are to reduce the dependence on the reliability of a single machine, the operating price, and the fight against disaster (such as the failure of the entire availability zone).&lt;/p&gt;

&lt;h2 id=&quot;message-queue-integration&quot;&gt;Message Queue Integration&lt;/h2&gt;

&lt;p&gt;Another idea is to integrate a message queue, such as the popular Apache Kafka. The general idea is: first write the message into Kafka’s message queue, and then let a Kafka consumer read the data and write it to Elasticsearch. The offset is committed only after the data is successfully written. In the same way, the consumer can be required to commit offset only after the data is snapshotted. The advantage of this is to avoid data loss: when Elasticsearch refuses to accept write requests and fails to back up the data through the snapshot, the data remains in Kafka. This design transforms the data loss problem into a data delay problem, and transfers part of the problem from Elasticsearch to Kafka. It also effectively solves the above-mentioned “snapshot feature cannot restore unsnapshoted data” problem, because this part of the data can now be restored from Kafka.&lt;/p&gt;

&lt;p&gt;In other words, this solution temporarily stores data that has not been written to ES and temporarily stores data that has not been snapshotted. It is suitable for application scenarios with a large amount of data, and is an efficient solution to problems such as ES write exceptions and unsnapshot parts. Due to the use of Kafka, its disaster tolerance is also very strong. Its shortcomings are: its complexity, it introduces a message queue and corresponding consumer logic to the system; its reliability also depends on the team’s programming ability; the difficulty of operation and maintenance also increases accordingly.&lt;/p&gt;

&lt;h2 id=&quot;location-of-primary-and-secondary-shards&quot;&gt;Location Of Primary And Secondary Shards&lt;/h2&gt;

&lt;p&gt;Another setting is &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/allocation-total-shards.html&quot; title=&quot;total_shards_per_node&quot;&gt;index.routing.allocation.total_shards_per_node&lt;/a&gt;. It allows us to set the maximum number of shards (replicas and primaries) that an index can store in a node at the same time. The default is unbounded. By setting this value to 1, you can ensure that the shards of each index are placed on different nodes. This approach makes it acceptable to lose one node and will not cause data loss, because only one shard will be lost. The remaining shards of the index will be available and Elasticsearch will replicate it again.&lt;/p&gt;

&lt;p&gt;The advantage of this approach is that it is easy to implement and can ensure that the cluster will not turn red when a node is lost. However, in the case of insufficient nodes, shards may not be allocated, resulting in yellow indexes.&lt;/p&gt;

&lt;h2 id=&quot;avoid-using-a-single-zone&quot;&gt;Avoid Using A Single Zone&lt;/h2&gt;

&lt;p&gt;Avoid using a single availability availability zone. When the cluster nodes are deployed in multiple availability zones, it can effectively reduce the possibility of data loss, especially the probability that the cluster will be affected by cloud provider availability zone accidents. Elasticsearch clusters from vendors such as AWS and Alibaba Cloud all support multi-zone deployment. For specific operations, please refer to &lt;a href=&quot;https://aws.amazon.com/fr/blogs/database/increase-availability-for-amazon- elasticsearch-service-by-deploying-in-three-availability-zones-2/&quot; title=&quot;Increase availability for Amazon Elasticsearch Service by deploying in three Availability Zones-AWS Database Blog&quot;&gt;AWS Blog&lt;/a&gt; and &lt;a href=&quot;https://partners- intl.aliyun.com/help/doc-detail/151655.htm&quot; title=&quot;High availability-Alibaba Cloud&quot;&gt;Alibaba Cloud Documentation&lt;/a&gt;. Then, in the Elasticsearch cluster, you can set the cluster’s shard allocation strategy through allocation awareness attributes. For example, the following configuration in the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch.yml&lt;/code&gt; of each cluster node&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;node.attr.availabilityzone&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;az1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cluster.routing.allocation.awareness.attributes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;availabilityzone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can set the node in the available zone az1 / az2 / az3 and so on. For specific operations, please refer to Opster’s article &lt;a href=&quot;https://opster.com/elasticsearch-glossary/elasticsearch-zone-awareness/&quot; title=&quot;Setting Up Zone Awareness for Shard Allocation in Elasticsearch&quot;&gt;Setting Up Zone Awareness for Shard Allocation in Elasticsearch&lt;/a&gt; .&lt;/p&gt;

&lt;h2 id=&quot;comparison&quot;&gt;Comparison&lt;/h2&gt;

&lt;p&gt;Let us compare the advantages and disadvantages of each of the following options.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Solution&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Benefits&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Disadvantages/Insufficiency&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Increase replicas&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Simple and fast operation&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reduce cluster utilization and increase operating costs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Snapshots and restore&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Strong disaster tolerance, cost efficient&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The initial setup is complex, can only be used on specific cloud providers, and data without snapshots cannot be restored.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;RAID&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Effectively prevent disk damage&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Only effective for single machine. Reduce cluster utilization and increase operating costs. Unable to cope with non-disk failures and catastrophic failures in the computer room.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MQ integration&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;strong disaster tolerance, temporary storage of data that has not been written to ES, temporary storage of unsnapshot data, suitable for big data scenarios&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;high system complexity, high operation and maintenance costs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Primary and secondary shards are stored on different nodes&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Simple and fast operation&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;May not be suitable for small clusters, resulting in shards that cannot be allocated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Multi availability zone&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Strong disaster tolerance&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Need to combine cloud provider configuration&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to go futher from this article?&lt;/p&gt;

&lt;p&gt;The focus of this article is on ways to prevent data loss, not troubleshooting after a problem occurs. But troubleshooting is also a very important part. If you are interested in this area, you can read Ming yi tian xia’s blog post (in Chinese) &lt;a href=&quot;https://blog.csdn.net/laoyang360/article/details/109699085&quot; title=&quot;Elasticsearch Cluster Troubleshooting and Repair Guide&quot;&gt;Elasticsearch 集群故障排查及修复指南 (Elasticsearch cluster troubleshooting and repair guide)&lt;/a&gt; or Elastic official blog post written by Ali Beyad &lt;a href=&quot;https://www.elastic.co/blog/red-elasticsearch-cluster-panic-no-longer&quot;&gt;RED Elasticsearch Cluster? Panic no longer&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we have seen several practical solutions to improve data reliability in Elasticsearch, including: increasing the number of replica shards, snapshots and restore, using RAID, MQ integration such as Kafka, storing primary and secondary shards of an index in different nodes, and avoid using one single availability zone. Finally, the article compares their pros and cons, and also shares some resources to go further. I hope this article can give you some thoughts and make your Elasticsearch cluster more efficient and usable. If you are interested in knowing more information, please follow my GitHub account &lt;a href=&quot;https://github.com/mincong-h&quot; title=&quot;GitHub&quot;&gt;mincong-h&lt;/a&gt; or subscribe to this blog.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Elastic, &lt;a href=&quot;https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html&quot; title=&quot;Elasticsearch: The Definitive Guide&quot;&gt;“Elasticsearch: The Definitive Guide”&lt;/a&gt;, 2021.&lt;/li&gt;
  &lt;li&gt;Elastic, &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.x/repository.html&quot;&gt;“Snapshot/Restore Repository Plugins”&lt;/a&gt;, 2021.&lt;/li&gt;
  &lt;li&gt;慕课网, &lt;a href=&quot;https://zhuanlan.zhihu.com/p/51170719&quot;&gt;RAID磁盘阵列是什么（一看就懂）&lt;/a&gt;, 2018.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="java" /><category term="system-design" /><category term="reliability" /><summary type="html">Six practical solutions to improve data reliability: improve number of replicas, snapshot and restore, RAID, MQ, etc.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-chase-charaba-uRHzV3ca2fk-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-chase-charaba-uRHzV3ca2fk-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Fix Corrupted Index in Elasticsearch</title><link href="https://mincong.io/en/elasticsearch-corrupted-index/" rel="alternate" type="text/html" title="Fix Corrupted Index in Elasticsearch" /><published>2021-07-14T16:57:49+02:00</published><updated>2021-07-14T16:57:49+02:00</updated><id>https://mincong.io/en/elasticsearch-corrupted-index</id><content type="html" xml:base="https://mincong.io/en/elasticsearch-corrupted-index/">&lt;p class=&quot;info&quot;&gt;This article is translated with Google Translate and reviewed by Mincong.&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;p&gt;A red index appeared on the production line because of the use of &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-forcemerge.html&quot; title=&quot;Force Merge API&quot;&gt;Force Merge API&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;store_exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;corrupt_index_exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;failed engine (reason: [corrupt file (source: [force merge])]) (resource=preexisting_corruption)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;caused_by&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;i_o_exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;failed engine (reason: [corrupt file (source: [force merge])])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;caused_by&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;corrupt_index_exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;checksum failed (hardware problem?): expected=70193aa8 actual=c48ab092 (resource=BufferedChecksumIndexInput(NIOFSIndexInput(path=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/usr/share/elasticsearch/data/nodes/0/indices/w76sdoDFRm-xxxxxxxxxxx/0 /index/_ke.fdt&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)))&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because of this index, the health of the Elasticsearch cluster is in red, and an urgent fix is needed.&lt;/p&gt;

&lt;h2 id=&quot;situation-analysis&quot;&gt;Situation Analysis&lt;/h2&gt;

&lt;p&gt;Preliminary investigation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The cluster does not use Elasticsearch Snapshot for backup&lt;/li&gt;
  &lt;li&gt;The index is not being written with new data, and the data is old data two weeks ago, which is basically read-only.&lt;/li&gt;
  &lt;li&gt;Tried restarting the corresponding data node, but it didn’t get better&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A similar situation was found on the Elastic forum, and someone encountered a damaged index that needed to be repaired &lt;a href=&quot;https://discuss.elastic.co/t/corrupted-elastic-index/135932&quot; title=&quot;Corrupted Elastic Index&quot;&gt;Corrupted elastic index&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210714-question.png&quot; alt=&quot;Forum Questions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the forum question, Mr. Thiago Souza and Mr. Yannick Welsch each provided a solution. Let’s take a look together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Potential solution provided by Thiago Souza:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is an indication of either hardware errors (check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dmesg&lt;/code&gt;) or that it maybe ran out of disk space.
At this point segments are corrupted and data is lost, meaning that you can’t recover the whole index anymore. Unless you have a snapshot (which is recommended for production).
There are a couple of options to try to partially recover this index:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Try to partially recover the corrupted shard:
    &lt;ol&gt;
      &lt;li&gt;Close the index.&lt;/li&gt;
      &lt;li&gt;Set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: fix&lt;/code&gt; for this index.&lt;/li&gt;
      &lt;li&gt;Open the index. At this time index will start to be verified and may take a long time.&lt;/li&gt;
      &lt;li&gt;If it recovers, then you need to redo step 1 to 3 but set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: false&lt;/code&gt; otherwise it will always try to fix when it opens again.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;If shard can’t be partially recovered then the only way is to completely drop it so at least the index can be recovered with the other healthy shards. For doing that you could try the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allocate_empty_primary&lt;/code&gt; command of Cluster Reroute API 109.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;None of these are guaranteed to work as it is highly dependent of the type of damage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Potential solution provided by Yannick Welsch:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note that the corruption marker file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corrupted_*&lt;/code&gt; will prevent the shard from being allocated as primary. This file is managed by Elasticsearch, and is unaware of the fact that you’ve fixed the index using Lucene’s CheckIndex. Removing this failure marker file should allow this shard to be allocated again.&lt;/p&gt;

&lt;h2 id=&quot;resolution-steps&quot;&gt;Resolution Steps&lt;/h2&gt;

&lt;p&gt;Next, we will try the solutions suggested by these two engieers.&lt;/p&gt;

&lt;h3 id=&quot;step-1-try-to-fix-the-index&quot;&gt;Step 1: Try to Fix The index&lt;/h3&gt;

&lt;p&gt;Try Thiago Souza’s suggestion to partially repair the corrupted shards:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Try to partially recover the corrupted shard:
      &lt;ol&gt;
        &lt;li&gt;Close the index.&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.1 Use &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-close.html&quot; title=&quot;Close Index API (7.x)&quot;&gt;Close Index API (7.x)&lt;/a&gt; Close the index:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST localhost:9200/MY_INDEX/_close
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that after closing the index, the index will not be able to write new data.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;\2. Set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: fix&lt;/code&gt; for this index.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.2 Add the configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: fix&lt;/code&gt; to configure the index level configuration so that the corresponding check can be performed when the index is started. However, after Elasticsearch 7.0, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix&lt;/code&gt; option has been permanently removed and can no longer be used. Let’s take a look at the official document &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/6.8/index-modules.html&quot; title=&quot;Index Modules (6.8)&quot;&gt;Index Modules (6.8)&lt;/a&gt; to better understand the configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It accepts the following options:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Option&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;false&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(default) Don’t check for corruption when opening a shard.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;checksum&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Check for physical corruption.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;true&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Check for both physical and logical corruption. This is much more expensive in terms of CPU and memory usage.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;fix&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The same as false. This option is deprecated and will be completely removed in 7.0. Same as false. (Note: it was deprecated in &lt;a href=&quot;https://github.com/elastic/elasticsearch/pull/32279/files&quot; title=&quot;PR-32279&quot;&gt;PR-32279&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;So for an Elasticsearch 7.x cluster, you should try:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT localhost:9200/MY_INDEX/_settings &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
{
  &quot;index.shard.check_on_startup&quot;: false
}
'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But I think this option is invalid, because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; means that no corruption will be checked and fixed. Moreover, as mentioned in the &lt;a href=&quot;#problem&quot;&gt;Problem&lt;/a&gt; section at the beginning of the article, restarting the data node did not improve the situation and the problem persists. I also tried &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; and didn’t fix anything.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;\4. If it recovers, then you need to redo step 1 to 3 but set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: false&lt;/code&gt; otherwise it will always try to fix when it opens again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.4 Skip this step, because the previous step was unsuccessful and there is no need to continue. Before proceeding to the next step, clear the configuration set above and restore the default configuration.&lt;/p&gt;

&lt;h3 id=&quot;step-2-accept-data-loss&quot;&gt;Step 2: Accept data loss?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;If shard can’t be partially recovered then the only way is to completely drop it so at least the index can be recovered with the other healthy shards. For doing that you could try the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allocate_empty_primary&lt;/code&gt; command of &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/cluster-reroute.html&quot; title=&quot;Cluster Reroute API (7.x)&quot;&gt;Cluster Reroute API (7.x)&lt;/a&gt;.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a data engineer, how can we accept data loss casually? Can’t accept it! Let’s take a look at Mr. Yannick Welsch’s advice first.&lt;/p&gt;

&lt;h3 id=&quot;step-3-fix-through-lucene-level&quot;&gt;Step 3: Fix through Lucene level&lt;/h3&gt;

&lt;p&gt;Try to fix the data according to the original steps provided by Mr. Matthias Wilhelm, that is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in to the data node remotely&lt;/li&gt;
  &lt;li&gt;Run Lucene repair tool CheckIndex&lt;/li&gt;
  &lt;li&gt;Remove the corrupted flag file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corrupted_*&lt;/code&gt; so that Elasticsearch can start normally&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The specific operations are as follows.&lt;/p&gt;

&lt;p&gt;First, you can use Elasticsearch’s &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-explain.html&quot; title=&quot;Explain API (7. .x)&quot;&gt;Explain API (7.x)&lt;/a&gt; Find the corresponding shard that cannot be allocated and the machine where it is located. Then log in to the machine remotely.&lt;/p&gt;

&lt;p&gt;The second point is to repair shards (also known as Lucene Index). This is detailed in Lucene’s Javadoc, such as &lt;a href=&quot;https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/index/CheckIndex.html#main -java.lang.String:A-&quot; title=&quot;CheckIndex (Lucene 6.4.0 API)&quot;&gt;CheckIndex (Lucene 6.4.0 API)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Command-line interface to check and exorcise corrupt segments from an index.&lt;/p&gt;

  &lt;p&gt;Run it like this:&lt;/p&gt;

  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -ea:org.apache.lucene... org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-verbose] [-segment X] [-segment Y]


-exorcise: actually write a new segments_N file, removing any problematic segments. *LOSES DATA*
-segment X: only check the specified segment(s). This can be specified multiple times, to check more than one segment, eg -segment _2 -segment _a. You can't use this with the -exorcise option.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;WARNING: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-exorcise&lt;/code&gt; should only be used on an emergency basis as it will cause documents (perhaps many) to be permanently removed from the index. Always make a backup copy of your index before running this! Do not run this tool on an index that is actively being written to. You have been warned!&lt;/p&gt;

  &lt;p&gt;Run without &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-exorcise&lt;/code&gt;, this tool will open the index, report version information and report any exceptions it hits and what action it would take if -exorcise were specified. With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-exorcise&lt;/code&gt;, this tool will remove any segments that have issues and write a new segments_N file. This means all documents contained in the affected segments will be removed.&lt;/p&gt;

  &lt;p&gt;This tool exits with exit code 1 if the index cannot be opened or has any corruption, else 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After confirming that you want to use the repair tool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CheckIndex&lt;/code&gt;, you need to confirm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The specific location of Elasticsearch shards. If a machine has only one Elasticsearch server running, it should be in a folder under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${ES_HOME}/data/nodes/0/indices/...&lt;/code&gt;. The specific path can be seen in the Explain API reponse (see the JSON excerpt at the beginning of the article).&lt;/li&gt;
  &lt;li&gt;The specific location of the Elasticsearch library. It should be in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${ES_HOME}/lib&lt;/code&gt;. We need this location because it is where Lucene Core’s JAR files are stored.&lt;/li&gt;
  &lt;li&gt;Decide whether to back up the shards first, and then perform the fix.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After everything is ready, execute the following command. Note that the three dots after Lucene are three characters dot, not one character, because some operating systems/blogs will switch them to another similar character.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/share/elasticsearch/lib
java &lt;span class=&quot;nt&quot;&gt;-cp&lt;/span&gt; lucene-core&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jar &lt;span class=&quot;nt&quot;&gt;-ea&lt;/span&gt;:org.apache.lucene... org.apache.lucene.index.CheckIndex /usr/share/elasticsearch/data/nodes/0/indices/w76sdoDFRm-xxxxxxxxxxx/0/ index &lt;span class=&quot;nt&quot;&gt;-verbose&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-exorcise&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After executing the command, CheckIndex returns:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No problems were detected with this index.

Took 118.609 sec total.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uh. . . So there are no problems? No data corruption at all? Could it be an unexpected situation, and Elasticsearch did not handle the exception correctly?&lt;/p&gt;

&lt;p&gt;Ok. Since the data is not corrupted, the next step is to move the corrupted flag file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corrupted_*&lt;/code&gt; to another folder (equivalent to removal). After a while, this shard was restored: it was successfully allocated, and it does not appear in the Explain API. There is no need to restart the server during this process. Next, connect to other machines and perform the same operation on all related red shards (shards that were not successfully allocated). Finally, the cluster turned back to green again, oh yeah!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we saw the red index caused by the use of Force Merge API. With the help of the Elastic forum, I tried to fix the data through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.shard.check_on_startup: fix&lt;/code&gt;, but this option no longer exists in Elasticsearch 7. We saw that through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allocate_empty_primary&lt;/code&gt; it is possible to accept partial data loss and keep the remaining healthy fragments, but we did not do this because we wanted to get all the data back. Next, we used the CheckIndex tool to repair at the Lucene level and found that there was no data corruption, which was actually a false alarm. Finally, remove the data corruption label file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corrupted_*&lt;/code&gt; to realize recovery.&lt;/p&gt;

&lt;p&gt;I hope this article about Elasticsearch in practice can bring you some new inspiration. If you are interested in learning more about Elasticsearch, please follow my GitHub account &lt;a href=&quot;https://github.com/mincong-h&quot; title=&quot;mincong-h&quot;&gt;mincong-h&lt;/a&gt;. Thank you all!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Matthias Wilhelm, “Corrupted elastic index”, &lt;em&gt;Elastic.co&lt;/em&gt;, 2021.
&lt;a href=&quot;https://discuss.elastic.co/t/corrupted-elastic-index/135932&quot;&gt;https://discuss.elastic.co/t/corrupted-elastic-index/135932&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="java" /><summary type="html">How to fix corrupted index in Elasticsearch cluster without snapshot?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-jonnica-hill-V5nq6u-Ce_U-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-jonnica-hill-V5nq6u-Ce_U-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Custom Internationalization (i18n) with Jekyll</title><link href="https://mincong.io/en/jekyll-i18n/" rel="alternate" type="text/html" title="Custom Internationalization (i18n) with Jekyll" /><published>2021-07-11T22:02:53+02:00</published><updated>2021-07-11T22:02:53+02:00</updated><id>https://mincong.io/en/jekyll-i18n</id><content type="html" xml:base="https://mincong.io/en/jekyll-i18n/">&lt;p class=&quot;info&quot;&gt;This article is translated with www.DeepL.com/Translator (free version) and reviewed by Mincong.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;During my visit to my family back home in April this year, I came across a lot of technical content in Chinese when I was looking for information, but I also found that not many of them have good quality. So I started to write Chinese articles in my blog, hoping to contribute to the Chinese developer community. More concretely, I wrote in two languages: Chinese and English. But in practice, I found that it is not a good experience for reader to see two languages in one blog.&lt;/p&gt;

&lt;p&gt;After I started writing in Chinese, several times my colleagues found my popular English articles in Google Search and started reading them. This thing made me embarrassed, because since April, my articles are all in Chinese. Let me think about it from their point of view: what happens if after reading, they are curious to read more articles? They may click on the home page and then surprised to see a bunch of Chinese blogs: they may feel confused and feel like they are in the wrong place. For someone who doesn’t know another language, the experience can be very bad. The opposite also holds true: when a Chinese friend sees my blog and sees a bunch of English articles, it feels hard to get interested in reading them. If the articles are written in their native language, it will be much more user-friendly.&lt;/p&gt;

&lt;p&gt;That’s why I want to do internationalization: I want to provide a comfortable reading experience for every reader. I want to have a clear distinction between the different languages in the blog, so that when people visit, they can read the content in the language they are familiar with, no matter which page they click on. Then the blog itself can also provide options for people to switch to another language.&lt;/p&gt;

&lt;p&gt;This post will share with you the internationalization of my blog.&lt;/p&gt;

&lt;h2 id=&quot;proposals&quot;&gt;Proposals&lt;/h2&gt;

&lt;p&gt;There are serveral proposals for internationalization, and I’ll discuss their feasibility below.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Provide translation feature. Embed translation button in the article and use third-party translators (Bing, Google, DeepL, etc.) to translate when user clicks the translation button.&lt;/li&gt;
  &lt;li&gt;Interlink English and Chinese articles. Embed a link to English article in Chinese article and another link to Chinese article in English article.&lt;/li&gt;
  &lt;li&gt;Introduce the concept of page key. Chinese and English articles share the same page key.&lt;/li&gt;
  &lt;li&gt;Use two collections: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;mark&gt;Final plan: Use two collections.&lt;/mark&gt;&lt;/p&gt;

&lt;h3 id=&quot;proposal-1-provide-translation-feature&quot;&gt;Proposal 1: Provide Translation Feature&lt;/h3&gt;

&lt;p&gt;Embed a translation button inside the article and use a third-party translator (Bing, Google, DeepL, etc.) to translate when the translation button is clicked. The rationale is that my blog is not very visited, with about 18,000 visitors per month. And I am not a professional writer, purely writing for fun and not making money. There is no need to be so serious. This feature is inspired by Chrome’s Translate button, which allows you to translate a page in a non-frequently used language by clicking the Translate button in the URL input field, or by right-clicking on the page content.&lt;/p&gt;

&lt;p&gt;The advantages of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It’s easy to implement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The disadvantages of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are no two articles, there is only one.&lt;/li&gt;
  &lt;li&gt;No correction for translation results&lt;/li&gt;
  &lt;li&gt;Without articles, we can’t attract readers through articles&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;proposal-2-interlinking-english-and-chinese-posts&quot;&gt;Proposal 2: Interlinking English and Chinese Posts&lt;/h3&gt;

&lt;p&gt;Add a link to the corresponding article at the beginning of each article in order to switch languages. That is, embed a link to an English article in a Chinese article and a link to a Chinese article in an English article. On the web page, add a button or an icon to achieve language switching. This way, readers can access another language version of the article by clicking this button or this icon while reading.&lt;/p&gt;

&lt;p&gt;For example, for the article &lt;a href=&quot;/cn/mongodb-schema-compatibility/&quot;&gt;“Implementing backward-compatible schema changes in MongoDB”&lt;/a&gt;, the switch between the English and Chinese versions of the article can be implemented in the following form.&lt;/p&gt;

&lt;p&gt;English version.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ---
  layout: post
  title: Making Backward-Compatible Schema Changes in MongoDB
  date: 2021-02-27 17:07:27 +0100
  categories: [java-serialization, reliability]
  tags: [java, mongodb, serialization, jackson, reliability]
  comments: true
&lt;span class=&quot;gi&quot;&gt;+ lang: en
+ version:
+ en-CN: 2021-04-30-mongodb-schema-compatibility.md
&lt;/span&gt;  ...
  ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chinese version.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ---
  layout: post
  title: Is it really that easy to add and delete fields in MongoDB?
  date: 2021-04-30 23:09:38 +0800
  categories: [java-serialization, reliability]
  tags: [java, mongodb, serialization, jackson, reliability]
  comments: true
&lt;span class=&quot;gi&quot;&gt;+ lang: zh
+ version:
+ en-US: 2021-02-27-mongodb-schema-compatibility.md
&lt;/span&gt;  ...
  ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The advantages of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The links to existing articles remain unchanged and do not affect SEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The disadvantages of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is not possible to know the link of another version of the other article through the article link.&lt;/li&gt;
  &lt;li&gt;If you change the link to the article, you should remember to change the referer, i.e. in the other language page.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;proposal-3-shared-page-key-between-chinese-and-english&quot;&gt;Proposal 3: Shared Page Key between Chinese and English&lt;/h3&gt;

&lt;p&gt;Introduce the concept of page key in each article. When a user accesses the article, the page URL contains both the language and the page key. More precisely, it follows the following expression.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/{lang}/{page-key}
https://mincong.io/en/mongodb-schema-compability
https://mincong.io/cn/mongodb-schema-compability
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;English version (ideal state).&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ---
  layout: post
  title: Making Backward-Compatible Schema Changes in MongoDB
  date: 2021-02-27 17:07:27 +0100
  categories: [java-serialization, reliability]
  tags: [java, mongodb, serialization, jackson, reliability]
  comments: true
&lt;span class=&quot;gi&quot;&gt;+ key: mongodb-schema-compatibility
+ lang: en
&lt;/span&gt;  ...
  ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chinese version (ideal state).&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ---
  layout: post
  title: Is it really that easy to add and delete fields in MongoDB?
  date: 2021-04-30 23:09:38 +0800
  categories: [java-serialization, reliability]
  tags: [java, mongodb, serialization, jackson, reliability]
  comments: true
&lt;span class=&quot;gi&quot;&gt;+ key: mongodb-schema-compatibility
+ lang: zh
&lt;/span&gt;  ...
  ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The advantage of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The article link contains the language. So you can also know the link of the other version by naming convension.&lt;/li&gt;
  &lt;li&gt;Hide date from URL&lt;/li&gt;
  &lt;li&gt;Thanks to the permalink pattern, you can write two articles a day (Chinese + English), which was not possible before when using date + title as URL.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The disadvantages of this proposal are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;May affect SEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Originally this was my perferred solution. Unfortunately it is not possible to implement. Because not all variables are available as part of Jekyll’s permalink. For example, Jekyll does not support custom variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lang&lt;/code&gt; as part of a link. See the official documentation &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;Permalinks&lt;/a&gt; for variables supported by Permalinks.&lt;/p&gt;

&lt;h3 id=&quot;proposal-4-use-two-collections&quot;&gt;Proposal 4: Use Two Collections&lt;/h3&gt;

&lt;p&gt;The first collection is the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts&lt;/code&gt; and the second collection is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The advantage of this is the same as proposal 3:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The article link contains the language. So you can also know the link of the other version by naming convension.&lt;/li&gt;
  &lt;li&gt;Hide date from URL&lt;/li&gt;
  &lt;li&gt;Thanks to the permalink pattern, you can write two articles a day (Chinese + English), which was not possible before when using date + title as URL.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The downside of this are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The default plugin &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-paginate&lt;/code&gt; only supports pagination for the default collection posts. If you need to paginate another collection, you need to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; plugin. However, GitHub Pages does not officially support the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; plugin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;other-considerations&quot;&gt;Other Considerations&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Whether the theme you are currently using has support for internationalization? For example, I use &lt;a href=&quot;https://github.com/kitian616/jekyll-TeXt-theme&quot;&gt;Jekyll TeXt Theme&lt;/a&gt;, which has some support for internationalization itself. The information in the header and footer of the browsing page can be automatically adjusted according to the language of the page. However, it does not translation for the page content directly.&lt;/li&gt;
  &lt;li&gt;If you’re using GitHub Pages, consider whether GitHub Pages has support for the plugins that you use. Only some of the Jekyll plugins are officially supported by GitHub, and others won’t work even if you install them. This will affect you unless you don’t use the official site generation, you can generate pages locally yourself or generate them from your custom CI pipeline.&lt;/li&gt;
  &lt;li&gt;Consider using another Jekyll internationalization plugin, such as &lt;a href=&quot;https://github.com/kurtsson/jekyll-multiple-languages-plugin&quot;&gt;jekyll-multiple-languages-plugin&lt;/a&gt;. I didn’t look into it at the time I wrote the proposals, and only found out about this plugin after the project was done… But this plugin is not supported by GitHub Pages neither.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-websites&quot;&gt;Other Websites&lt;/h2&gt;

&lt;p&gt;How do other blogs work? Is there anything we can learn from them?&lt;/p&gt;

&lt;h3 id=&quot;elasticsearch-blog&quot;&gt;Elasticsearch Blog&lt;/h3&gt;

&lt;p&gt;Elastic’s blog is internationalized, and each article is available in multiple languages, such as the following article: &lt;a href=&quot;https://www.elastic.co/cn/blog/how-to-design-your-elasticsearch-data-storage-architecture-for-scale&quot;&gt;How to design a scalable Elasticsearch data storage architecture&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210711-elasticsearch-blog.png&quot; alt=&quot;Elasticsearch blog i18n&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is listed below in three languages.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Language&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Links&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;How to design your Elasticsearch data storage architecture for scale&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.elastic.co/blog/how-to-design-your- elasticsearch-data-storage-architecture-for-scale&quot;&gt;https://www.elastic.co/blog/how-to-design-your- elasticsearch-data-storage-architecture-for-scale&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;How to design your Elasticsearch data storage architecture for scale&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.elastic.co/cn/blog/how-to-design-your-elasticsearch-data-storage-architecture-for- scale&quot;&gt;https://www.elastic.co/cn/blog/how-to-design-your-elasticsearch-data-storage-architecture-for- scale&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;スケーラブルなElasticsearchデータストレージを设计する&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.elastic.co/jp/blog/how-to-design-your-elasticsearch-data-storage-architecture-for -scale&quot;&gt;https://www.elastic.co/jp/blog/how-to-design-your-elasticsearch-data-storage-architecture-for -scale&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It is named in the following way.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.elastic.co/blog/{post}
https://www.elastic.co/{country}/blog/{post}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;English blogs do not have EN prefix, other languages use country abbreviation as prefix, for example, CN for China, JP for Japan.&lt;/p&gt;

&lt;h3 id=&quot;text-theme&quot;&gt;TeXt Theme&lt;/h3&gt;

&lt;p&gt;Jekyll TeXt Theme is a highly customizable Jekyll theme for personal or team websites, blogs, projects, documents and more. It references the iOS 11 style with big and prominent headers and rounded buttons and cards. It was written by Alibaba’s engineer Tian Qi (&lt;a href=&quot;https://github.com/kitian616&quot;&gt;kitian616&lt;/a&gt;). This theme supports &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/zh/i18n&quot;&gt;internationalization&lt;/a&gt;. In fact, the documentation of this theme itself is internationalized. If you don’t believe me, see this table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Language&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Links&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Quick Start&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/quick-start&quot;&gt;https://tianqi.name/jekyll-TeXt-theme/docs/en/quick-start&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Quick Start&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/zh/quick-start&quot;&gt;https://tianqi.name/jekyll-TeXt-theme/docs/zh/quick-start&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It is named in the following way.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://tianqi.name/jekyll-TeXt-theme/docs/{lang}/{post}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whatever the language, the language abbreviation is used as the prefix, for example, zh for Chinese, en for English.&lt;/p&gt;

&lt;h2 id=&quot;final-solution&quot;&gt;Final solution&lt;/h2&gt;

&lt;p&gt;The final solution is proposal 4: use two collections. The first collection is the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts&lt;/code&gt; and the second collection is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;. The main goal is to modify the article links to the following format.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/{country}/{post}
https://mincong.io/{country}/{page}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The two parts of the link here.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;country&lt;/code&gt; is the country, EN for English-speaking countries and CN for China. This expression was better than using locale en/zh because it’s not only a matter of language, but also the components loaded by the page: for example, the Chinese page will suggest WeChat but not the English version. In the future, I’ll also consider splitting the other components into two different versions: Chinese and English pages load different comment systems, different SEO scripts, etc.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page&lt;/code&gt; is the ID of the blog post or the ID of another page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, I want to share with you the specific tasks that need to be done when implementing internationalization.&lt;/p&gt;

&lt;h2 id=&quot;tasks&quot;&gt;Tasks&lt;/h2&gt;

&lt;p&gt;This section is a detailed explanation of the main tasks that need to be done. This section may be a bit long, it’s mainly for those who are interested in changing their blogs for real. If you don’t want to internationalize your site, I suggest avoid reading it into details.&lt;/p&gt;

&lt;h3 id=&quot;task-1-modify-chinese-articles&quot;&gt;Task 1: Modify Chinese Articles&lt;/h3&gt;

&lt;p&gt;Modify the article link to the following format.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/cn/{post}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since most of the Chinese articles were written after April this year, there is no need to keep the original links. At the beginning of each article, add two pieces of information: language and link redirection.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gi&quot;&gt;+ lang: zh
&lt;/span&gt;  date: 2021-04-20 11:21:16 +0800
  categories: [java-core]
  tags: [java, akka]
&lt;span class=&quot;p&quot;&gt;@@ -13,6 +14,8 @@&lt;/span&gt; excerpt: &amp;gt;
  image: /assets/bg-ocean-ng-L0xOtAnv94Y-unsplash.jpg
  cover: /assets/bg-ocean-ng-L0xOtAnv94Y-unsplash.jpg
&lt;span class=&quot;gi&quot;&gt;+ redirect_from:
+ - /2021/04/20/exponential-backoff-in-akka/
&lt;/span&gt;  article_header:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then create a new collection called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;. Store it in the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_cn&lt;/code&gt; according to Jekyll naming requirements, then put all Chinese articles in that folder and remove the “year, month and day” part of the file name.&lt;/p&gt;

&lt;p&gt;Changes in article links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before: &lt;a href=&quot;https://mincong.io/2021/04/30/mongodb-schema-compatibility/&quot;&gt;https://mincong.io/2021/04/30/mongodb-schema-compatibility/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;After: &lt;a href=&quot;https://mincong.io/cn/mongodb-schema-compability/&quot;&gt;https://mincong.io/cn/mongodb-schema-compability/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, in the global configuration file (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;), configure the information about the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt; collection, such as the permalink, whether to display the table of contents, etc. For details, see: &lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/31&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/31&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;task-2-modify-english-articles&quot;&gt;Task 2: Modify English Articles&lt;/h3&gt;

&lt;p&gt;I have 168 English articles on my blog, some of which have important page views. I don’t want them to lose any information because of the internationalization, such as comments and likes on Disqus. So my strategy for English articles is to not make any changes to existing articles and only change the new articles. For new articles, I use the new naming convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://mincong.io/en/{post}&lt;/code&gt;. In the following paragraphs, let’s discuss it further.&lt;/p&gt;

&lt;p&gt;For all existing articles, explicitly mark the article language as English in the front matter at the article level.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find _posts &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/date:/i lang: en'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And after adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permalink&lt;/code&gt; so that they are not interfered with by the global configuration.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;find &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/github/mincong-h.github.io/_posts&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.md&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;path &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##*/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;  | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^([[:digit:]]+)-([[:digit:]]+)-([[:digit:]]+)-(. *)\.md/\1/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^([[:digit:]]+)-([[:digit:]]+)-([[:digit:]]+)-(. *)\.md/\2/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;   | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^([[:digit:]]+)-([[:digit:]]+)-([[:digit:]]+)-(. *)\.md/\3/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;  | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^([[:digit:]]+)-([[:digit:]]+)-([[:digit:]]+)-(. *)\.md/\4/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: year=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, month=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, day=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, name=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, permalink=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/comments:/i\
permalink: PERMALINK
'&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s|PERMALINK|&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;|&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;i &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For new articles, use the new naming convention (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;- permalink: /:year/:month/:day/:title/
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ permalink: /en/:title/
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also you need to modify the post generation script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;newpost.sh&lt;/code&gt; to make it generate both Chinese and English posts. Here is an excerpt from the script: we generate the paths for both Chinese and English posts, confirm that they do not exist, and then add new content.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt;:1&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$title&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'usage: newpost.sh My New Blog'&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bloghome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$title&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[:upper:]'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[:lower:]'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +&lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.md&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;filepath_en&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bloghome&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/_posts/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;filepath_cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bloghome&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/_cn/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filepath_en&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filepath_en&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; already exists.&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filepath_cn&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filepath_cn&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; already exists.&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;append_metadata_en &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filepath_en&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$title&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
append_metadata_cn &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filepath_cn&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$title&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Not for EN, because EN post is translated.&lt;/span&gt;
append_content &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filepath_cn&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Blog posts created!&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; EN: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filepath_en&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; CN: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filepath_cn&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more details, see: &lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/37&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/37&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;task-3-adding-a-chinese-homepage&quot;&gt;Task 3: Adding a Chinese Homepage&lt;/h3&gt;

&lt;p&gt;Adding a Chinese homepage sounds easy, as if all you need to do is copy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; from the blog home page to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn/index.html&lt;/code&gt; and translate a few words. Actually, it is way more complex than that. I use the official Jekyll plugin jekyll-paginate (v1) for my home page. But this plugin only supports pagination for the default set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts&lt;/code&gt;, not for other sets, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;. So the real meaning of adding a Chinese homepage is to upgrade the plugin to jekyll-paginate-v2 to support pagination for the Chinese collection &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Install and use the new plugin in the site configuration (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;) at&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;- paginate: 8
- paginate_path: /page:num # don't change this unless for special need
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ pagination:
+   enabled: true
+   per_page: 8
&lt;/span&gt;

  ## =&amp;gt; Sources
&lt;span class=&quot;p&quot;&gt;@@ -238,7 +240,7 @@&lt;/span&gt; defaults:
  ##############################
  plugins:
    - jekyll-feed
&lt;span class=&quot;gd&quot;&gt;-   - jekyll-paginate
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   - jekyll-paginate-v2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Modified the paginator of the TeXt Theme theme itself to avoid using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site.posts&lt;/code&gt; directly as a source for posts. And also add a specific prefix to the homepage, so that English and Chinese have their own homepage, i.e. &lt;a href=&quot;https://mincong.io/&quot;&gt;https://mincong.io/&lt;/a&gt; and &lt;a href=&quot;https://mincong.io/cn/&quot;&gt;https://mincong.io/cn/&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
- {%- assign _post_count = site.posts | size -%}
&lt;span class=&quot;gi&quot;&gt;+ {%- assign _post_count = paginator.total_posts -%}
&lt;/span&gt;      {%- assign _page_count = paginator.total_pages -%}
      &amp;lt;p&amp;gt;{{ _locale_statistics | replace: '[POST_COUNT]', _post_count | replace: '[PAGE_COUNT]', _page_count }}&amp;lt;/p&amp;gt;
      &amp;lt;div class=&quot;pagination__menu&quot;&amp;gt;
&lt;span class=&quot;p&quot;&gt;@@ -51,7 +51,7 @@&lt;/span&gt;
              &amp;lt;/li&amp;gt;

            {%- elsif page == 1 -%}
&lt;span class=&quot;gd&quot;&gt;-             {%- assign _home_path = site.paths.home | default: site.data.variables.default.paths.home -%}
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+             {%- assign _home_path = site.paths.home | default: site.data.variables.default.paths.home | append: include.baseurl -%} 
&lt;/span&gt;              {%- include snippets/prepend-baseurl.html path=_home_path -%} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are actually some other modifications to consider, but I won’t expand on them due to the timing. Here is the final result for the home page, a comparison between English and Chinese:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210711-diff-home.png&quot; alt=&quot;comparison for the home page between English and Chinese&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For more details see: &lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/32&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/32&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;task-4-modifying-build-and-deployment&quot;&gt;Task 4: Modifying Build and Deployment&lt;/h3&gt;

&lt;p&gt;You can no longer use the old automatic deployment method because of jekyll-paginate-v2, a plugin that is not officially supported by GitHub. Now you need to deploy it manually or via the CI. That is, you no longer deploy from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch. After the code is merged into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;, the new pages are generated manually or by CI (core command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;). Then, the generated content, which is in the folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;, is uploaded to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch for deployment.&lt;/p&gt;

&lt;p&gt;To do it manually, the main steps are as follows: create a new, master-independent branch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;, add an empty commit as the start of the branch, then empty the local Jekyll generated files folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt; and connect it to the new branch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout &lt;span class=&quot;nt&quot;&gt;--orphan&lt;/span&gt; gh-pages
git commit &lt;span class=&quot;nt&quot;&gt;--allow-empty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Initialize gh-pages&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; _site
git worktree add _site gh-pages
&lt;span class=&quot;c&quot;&gt;# &quot;jekyll build&quot; or equivalent commands&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To implement this task, you also need to change the branch to deploy from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ph-pages&lt;/code&gt; in the GitHub project settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210711-deploy-via-gh-pages.png&quot; alt=&quot;Change the deployment method: no longer use master branch but gh-pages branch deployment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For more information, see: Sangsoo Nam, &lt;a href=&quot;https://sangsoonam.github.io/2019/02/08/using-git-worktree-to-deploy- github-pages.html&quot;&gt;Using Git Worktree to Deploy GitHub Pages&lt;/a&gt;, 2019.&lt;/p&gt;

&lt;p&gt;To do it via the CI (GitHub Actions in my case), you can use the following workflow：&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy to GitHub Pages&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# testing&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build-and-deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;production&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout source code&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;persist-credentials&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set up Ruby&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/setup-ruby@v1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.6&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Not needed with a .ruby-version file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bundler-cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# runs 'bundle install' and caches installed gems automatically&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies in the Gemfile&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;bundler install --path vendor/bundle&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build Jekyll website&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy GitHub Pages&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;JamesIves/github-pages-deploy-action@4.1.4&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gh-pages&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;task-5-modifying-more-pages&quot;&gt;Task 5: Modifying More Pages&lt;/h3&gt;

&lt;p&gt;In the task above, we mainly mentioned modifications for Chinese articles and English articles. But a website has many other pages besides articles, such as categories, series, archives, about, etc. These pages also need to be modified before they can be used properly.&lt;/p&gt;

&lt;p&gt;The main objective is to ensure a consistent user-experience for browsing. When navigating between pages, all links in English pages will lead to English pages, and all links in Chinese pages will lead to Chinese pages. This creates a comfortable reading experience for the user: because all pages are in a language they are familiar with. As for the pages that already exist, we need to redirect them to the new links. The following is a list of new pages and the redirection of existing pages.&lt;/p&gt;

&lt;p&gt;Home page:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/
https://mincong.io/cn/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Category pages:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/en/categories/
https://mincong.io/en/categories/{category}/
https://mincong.io/cn/categories/
https://mincong.io/cn/categories/{category}/

https://mincong.io/categories/ -&amp;gt; https://mincong.io/en/categories/
https://mincong.io/categories/{category} -&amp;gt; https://mincong.io/en/categories/{category}/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Series pages:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/en/series/
https://mincong.io/en/series/{serie}/
https://mincong.io/cn/series/

https://mincong.io/series/ -&amp;gt; https://mincong.io/en/series/
https://mincong.io/series/{serie} -&amp;gt; https://mincong.io/en/series/{serie}/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;About page:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/en/about/
https://mincong.io/cn/about/

https://mincong.io/about/ -&amp;gt; https://mincong.io/en/about/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Archived pages:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mincong.io/en/archive/
https://mincong.io/cn/archive/

https://mincong.io/archive/ -&amp;gt; https://mincong.io/en/archive/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more information, see: &lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/34&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/34&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;task-6-language-switching-button&quot;&gt;Task 6: Language Switching Button&lt;/h3&gt;

&lt;p&gt;Provide a language switch button in the website to enable languange switching. There are two main buttons here: one in the top right corner of the page, displayed as a flag, and another button in the title section of the article, highlighted in red for the current language and white for the optional other languages. The difference between these two buttons is that the top-right button will switch to the home page in another language when clicked, while the language button on the page will make the page jump directly to another version of the same article. I call them “global switching” and “article switching” feature.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210711-post-en.png&quot; alt=&quot;English post page example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210711-post-cn.png&quot; alt=&quot;Chinese article page example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the global switching feature, the main tasks are to write the flag, link, and other information of another language in the configuration file of the page navigation, and then use these information when the page is generated.&lt;/p&gt;

&lt;p&gt;Register information to the data file of the page navigation (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/navigation.yml&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;# switch to the other langage&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;urls2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;en &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/cn/&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;zh &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;urls2_src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;en &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/flag-CN.png&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;zh &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/flag-US.png&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;urls2_alt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;en &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Chinese&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;zh &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;English&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The header (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/header.html&lt;/code&gt;) should include this element as well.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ _site_root2 }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ _site_root2_src }}&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ _site_roo2_alt }}&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navigation__lang_img&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the local toggle feature, the implementation is quite different. This is achieved by looking for articles with the same name in a collection of other languages. Here, articles in different languages must use the same filename, otherwise they cannot be found. Specifically, we first get the article ID, then extract the characters after the last slash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; (with the slash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;), then take this information to traverse other collections and return the corresponding link:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_filename&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_suffix&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_filename&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_matched&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where_exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item.id contains _suffix&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_matched&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;__return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_matched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;__return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more information, see.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/34&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/34&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mincong-h/mincong-h.github.io/pull/36&quot;&gt;https://github.com/mincong-h/mincong-h.github.io/pull/36&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;remaining-tasks&quot;&gt;Remaining Tasks&lt;/h3&gt;

&lt;p&gt;Having done this, the entire internationalization task is basically done. The following tasks can be addressed in the future to improve the situation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Implement both Chinese and English RSS feeds.&lt;/li&gt;
  &lt;li&gt;Load more Chinese components on Chinese pages, such as loading WeChat’s SDK for sharing, loading Baidu’s SDK to improve search presence on Chinese search engine, replacing Disqus with another commenting system that can be loaded in mainland China without VPN, and links to other Chinese developer platforms.&lt;/li&gt;
  &lt;li&gt;Automate the Chinese-to-English translation by scripting translation requests directly to third-party translation platforms, such as Google Translate, DeepL, etc.&lt;/li&gt;
  &lt;li&gt;Fix the tag-cloud feature in the archive page. The tag-cloud currently uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site.tags&lt;/code&gt; for tag-related statistics. However, all the tags of Chinese articles (under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt; collection) are not taken into account.&lt;/li&gt;
  &lt;li&gt;Fix the article category pages. Now the category page can show text in Chinese, but the actual article list is retrieved from English collection &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts&lt;/code&gt; rather than Chinese collection &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cn&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have other suggestions, please feel free to leave a comment!&lt;/p&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to go further from this article?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you’ve never heard of Jekyll, you can visit &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;official website&lt;/a&gt; to learn about this great blogging engine.&lt;/li&gt;
  &lt;li&gt;If you’ve never tried the free &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, visit the official website and try to build your and host your own personal blog for free!&lt;/li&gt;
  &lt;li&gt;If you haven’t tried &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/&quot;&gt;Jekyll TeXt Theme&lt;/a&gt; by Qi Tian, maybe you would like to try it.&lt;/li&gt;
  &lt;li&gt;If you want to learn more about &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;, you can visit their GitHub project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we have seen the process of internationalizing of this site &lt;a href=&quot;https://mincong.io&quot;&gt;https://mincong.io&lt;/a&gt;, an internationalization based on Jekyll and TeXt Theme. We compared the pros and the cons of the four proposals; we looked at other blogs’ implementations of internationalization; we listed the six of the more important tasks; and we looked further into the next steps for internationalization. Finally, I also share some resources for you to going further from this article. I hope this article has given you some insights. If you’re interested in more information and advice, please follow me on GitHub &lt;a href=&quot;https://github.com/mincong-h&quot;&gt;mincong-h&lt;/a&gt;. Thank you all!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Elastic, “Elastic Blog”, Elastic, 2021. &lt;a href=&quot;https://www.elastic.co/cn/blog/&quot;&gt;https://www.elastic.co/cn/blog/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MrPowerScripts, “How to get around the jekyll-pagination-v2 limitation of GitHub pages with CircleCI”, MrPowerScripts, 2019. &lt;a href=&quot;https://mrpowerscripts.com/github-pages-circleci-jekyll-paginate-v2/&quot;&gt;https://mrpowerscripts.com/github-pages-circleci-jekyll-paginate-v2/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sangsoo Nam, “Using Git Worktree to Deploy GitHub Pages”, Sangsoo Nam, 2019. &lt;a href=&quot;https://sangsoonam.github.io/2019/02/08/using-git- worktree-to-deploy-github-pages.html&quot;&gt;https://sangsoonam.github.io/2019/02/08/using-git- worktree-to-deploy-github-pages.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jekyll, “Jekyll Documentation”, Jekyll, 2021. &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;https://jekyllrb.com/docs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sverrir Sigmundarson, “jekyll-paginate-v2”, GitHub, 2021. &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;https://github.com/sverrirs/jekyll-paginate-v2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tian Qi, “Internationalization”, TeXt Theme, 2021.
&lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/i18n&quot;&gt;https://tianqi.name/jekyll-TeXt-theme/docs/en/i18n&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Rahul Patil, “How to insert text after a certain string in a file?”, Unix &amp;amp; Linux - Stack Exchange, 2014. &lt;a href=&quot;https://unix. stackexchange.com/a/121173/220624&quot;&gt;https://unix. stackexchange.com/a/121173/220624&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Taewoo Lee, “[Jekyll](EN) Make array and add element in liquid”, TWpower’s Tech Blog, 2020. &lt;a href=&quot;https://twpower.github.io/228- make-array-and-add-element-in-jekyll-liquid-en&quot;&gt;https://twpower.github.io/228- make-array-and-add-element-in-jekyll-liquid-en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="jekyll" /><category term="jekyll" /><category term="i18n" /><summary type="html">One blog and two languages: bringing a better reading experience for the readers! This article shares how I internationalize my blog https://mincong.io</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-chuttersnap-aku7Zlj_x_o-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-chuttersnap-aku7Zlj_x_o-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">An Important Change</title><link href="https://mincong.io/2021/04/20/an-important-change/" rel="alternate" type="text/html" title="An Important Change" /><published>2021-04-20T04:40:32+02:00</published><updated>2021-04-20T04:40:32+02:00</updated><id>https://mincong.io/2021/04/20/an-important-change</id><content type="html" xml:base="https://mincong.io/2021/04/20/an-important-change/">&lt;p&gt;Hi my readers,&lt;/p&gt;

&lt;p&gt;Currently I am traveling to Tianjing (天津) and writing this article in my hotel. In
China, we cannot access to the internet the same way as others do in other
countries. So the searching experience is completely different. Because of this,
I discovered how painful it is for Chinese developers to search some
documentations for their daily work. Also, most of the people don’t speak fluent
English. Therefore, I think I should make some effort to make their lives easier.
So I want to write articles in Chinese to better help them.
Makig this decision is really hard. Because writing in Chinese means the rest of
the world won’t understand these articles anymore. But I want to try something
new.&lt;/p&gt;

&lt;p&gt;I am also writing this article to thank all those who follow my blog and give my precious
feedback. I hope my articles bring you some inspirations to your work. Thank
you!&lt;/p&gt;

&lt;p&gt;Here is my plan:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;mark&gt;Starting from this article, most of the new articles will be written in
Chinese.&lt;/mark&gt;&lt;/li&gt;
  &lt;li&gt;Existing articles won’t be deleted.&lt;/li&gt;
  &lt;li&gt;I will still use the same feed.&lt;/li&gt;
  &lt;li&gt;I will try to add a Google translater to automatically translate the content of the
article. I cannot do that right now because I don’t have access to Google…&lt;/li&gt;
  &lt;li&gt;The blog will be progressively internationalized to be more Chinese friendly.
It means that the nagivations, post metadata and footer will support both EN
and CN depending on the settings of the OS or the broswer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading! Best,&lt;/p&gt;

&lt;p&gt;Mincong&lt;/p&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="review" /><category term="project" /><summary type="html">English to Chinese?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-javier-allegue-barros-C7B-ExXpOIE-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-javier-allegue-barros-C7B-ExXpOIE-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">DVF: Real Estate Analysis For Île-de-France in 2020</title><link href="https://mincong.io/2021/04/16/dvf-real-estate-analysis-idf-2020/" rel="alternate" type="text/html" title="DVF: Real Estate Analysis For Île-de-France in 2020" /><published>2021-04-16T02:03:43+02:00</published><updated>2021-04-16T02:03:43+02:00</updated><id>https://mincong.io/2021/04/16/dvf-real-estate-analysis-idf-2020</id><content type="html" xml:base="https://mincong.io/2021/04/16/dvf-real-estate-analysis-idf-2020/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Open data &lt;a href=&quot;https://www.data.gouv.fr/fr/datasets/demandes-de-valeurs-foncieres-geolocalisees/&quot;&gt;“Demande de valeurs foncières géolocalisées
(DVF)”&lt;/a&gt;
is an open dataset provided by the French government which collects all the
real-estate transactions since January 2014, in mainland France and the overseas
departments and territories, except in Mayotte and Alsace-Moselle. Today, we are
going to explore this dataset using Elasticsearch and Kibana. In particular, we
are going to study the real estate market of Île-de-France in 2020.&lt;/p&gt;

&lt;p&gt;After reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The prerequisite before the analytics&lt;/li&gt;
  &lt;li&gt;The overview of the market Île-de-France&lt;/li&gt;
  &lt;li&gt;The comparison of apartments and houses&lt;/li&gt;
  &lt;li&gt;Some more specific analytics on apartments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Globally, the idea is to see the big picture and identify some valuable factors to
study. Then step-by-step, we will go into a more specific direction to go
further in our exploration. Now, let’s get started!&lt;/p&gt;

&lt;h2 id=&quot;prerequisite&quot;&gt;Prerequisite&lt;/h2&gt;

&lt;p&gt;Before the analytics, we need to prepare the dataset. Here, I am using
&lt;a href=&quot;https://www.elastic.co/elasticsearch/&quot;&gt;Elasticsearch&lt;/a&gt; and
&lt;a href=&quot;https://www.elastic.co/kibana/&quot;&gt;Kibana&lt;/a&gt;. For those who don’t know Elasticsearch, Elasticsearch
is a distributed, RESTful search and analytics engine. As for Kibana, Kibana is
a free and open user interface that lets you visualize your Elasticsearch data
and navigate the Elastic Stack. The steps of the preparation are mainly the following
ones:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download the dataset from &lt;a href=&quot;https://www.data.gouv.fr&quot;&gt;https://www.data.gouv.fr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Design the data model and index them into Elaticsearch&lt;/li&gt;
  &lt;li&gt;Optimize the storage for search&lt;/li&gt;
  &lt;li&gt;Set up Kibana and create dashboards to analyze the data&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To set up Elasticsearch, you can use Docker: just running a Docker container in
localhost and
you are ready to go. The same thing applies to Kibana.
However, you need to give the name of the Elasticsearch cluster to Kibana so that they
can be linked together. Here, I am using the names “elasticsearch-dvf” and
“kibana-dvf” to achieve that. Once the setup is done and the indexing process is finished, you can
see all the data in Elasticsearch. There are several gigabytes (GB) of data:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  curl &quot;localhost:9200/_cat/indices/transactions.*&quot;
yellow open transactions.2019 ExlbB3EuQSqk__4MEW6eHQ 1 1 3142952 0 802.3mb 802.3mb
yellow open transactions.2018 1B3pKi4URDar2w0vAvPysA 1 1 3319426 0 853.3mb 853.3mb
yellow open transactions.2017 HJLTdbbtSqW686jQFzgg7g 1 1 3381190 0 862.4mb 862.4mb
yellow open transactions.2016 ZNPlUNeTStS8KsOgvaMTww 1 1 2939004 0 753.5mb 753.5mb
yellow open transactions.2015 h2CEOxWzTYymAt9KBMasJg 1 1 2750305 0 704.1mb 704.1mb
yellow open transactions.2014 17ZVk9oMQ6KmvTpMgGdMBg 1 1 2516802 0 650.7mb 650.7mb
yellow open transactions.2020 Khw7RAl1RcCDeLlz8Blt7g 1 1 2459560 0 623.5mb 623.5mb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the Kibana side, we need to define an index pattern &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transactions.*&lt;/code&gt; that
matches all the indices mentioned above.
Since this is not aimed to be a technical blog, I am going to skip the
technical details here. If you were interested in the entire preparation, you
can see my previous articles on the series page &lt;a href=&quot;/series/dvf&quot;&gt;“DVF”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Starting from the next section, we are going to analyze the data of
Île-de-France, the Greater Paris area. It consists of 8 departments:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Paris (75)&lt;/li&gt;
  &lt;li&gt;Hauts-de-Seine (92)&lt;/li&gt;
  &lt;li&gt;Seine-Saint-Denis (93)&lt;/li&gt;
  &lt;li&gt;Val-de-Marne (94)&lt;/li&gt;
  &lt;li&gt;Seine-et-Marne (77)&lt;/li&gt;
  &lt;li&gt;Yvelines (78)&lt;/li&gt;
  &lt;li&gt;Essonne (91)&lt;/li&gt;
  &lt;li&gt;Val-d’Oise (95)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;h3 id=&quot;transactions-2020&quot;&gt;Transactions 2020&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-mutation-count.png&quot; alt=&quot;2020 Ile-de-France mutation count&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First of all, let’s take a look at the global landscape of the real estate
market of Île-de-France in 2020. There were 146,084 transactions
happened in this area with 387,425 mutations (*). From the widget above, we can
see the number of mutations over the year. The real estate market was active
despite the pandemic. However, the number of transactions was greatly reduced
between the end of March and mid-May, probably because of the first lockdown measure
taken by the French government. After that period, the market quickly regained its dynamics.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(*) One mutation represents a transfer of ownership of a given premise. A premise
can be an apartment, a house, a cellar, etc. Each transaction contains one or
multiple mutations. For example, you can buy one apartment and one cellar in
the same transaction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;transactions-2014-to-2020&quot;&gt;Transactions 2014 To 2020&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-mutation-count-2014-to-2020.png&quot; alt=&quot;2014-2020 Ile-de-France mutation count&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we compare to the previous years, we can see that the market was impacted by
the COVID-19 in 2020. The total number of mutations decreased 19.5% (481,002 in 2019
vs 387,425 in 2020) in Île-de-France. Some contributing factors may be the COVID-19 measures
taken by the government (lockdown, curfew), the economic impact (partial
unemployment, complete unemployment), the psychological factor (uncertainty
about the future).&lt;/p&gt;

&lt;p&gt;Before going further, let’s spend some time understanding
which part of the dataset is the most valuable for the analysis. To do that, we
can aggregate the data per field and continue our study on the most significant ones.
Here I chose the field “nature of mutation” and the field “premise type”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-nature_mutation-and-local_type.png&quot; alt=&quot;2020 Ile-de-France distribution of nature of mutation and distribution of premise type&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nature of mutation.&lt;/strong&gt; From the widget on the left side, you can see that there are several reasons
why people make a transaction: expropriation, vente terrain à bâtir
(building plot for sales), adjudication (judgement), échange (exchange), vente
(sales), and vente en l’état future d’achèvement” (sales before completion).
Most of the time it’s either “Vente” or “Vente en l’état future d’achèvement”.
That’s why I am going to focus my analysis on these two types in the following
sections.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Premise type.&lt;/strong&gt; From the widget on the right side, you can see the different types of premises
that people sell: local industriel, commercial ou assimilé (industrial,
commercial or related premise), maison (house), dépendance (dependent),
appartement (apartment), or empty. For those mutations having an empty type,
they can be meadows, lands, gardins, thickets, etc that we love but we
don’t have time to cover in this article. As for the “dependent” ones, they depend
on the main types: apartment, house, … where these mutations happen in the
same transaction. For example, a dependent can be a cellar. When someone buys an
apartment, he/she buys the cellar at the same time. So I am going to
filter them out as well.&lt;/p&gt;

&lt;p&gt;In short, we are going to look into the sales of apartments and houses in the
next sections.&lt;/p&gt;

&lt;h2 id=&quot;apartment-and-house&quot;&gt;Apartment And House&lt;/h2&gt;

&lt;h3 id=&quot;map&quot;&gt;Map&lt;/h3&gt;

&lt;p&gt;If we put all the sales of apartments and houses (first-hand and second-hand
combined) into a map, we can obtain the following result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-map-sales-apartments-and-houses-2020.png&quot; alt=&quot;Map: sales of apartments and houses in Ile-de-France in 2020&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This map is aggregated by the municipality (commune). The color represents the
average price per meter square (€/m2) of the municipality. You can see that the
most expensive ones are all located in Paris (75) in the middle of the map with
an average price higher than 9,449 €/m2. Other municipalities around Paris are 
also expensive, especially on the west side. These departements around Paris are
called “La Petite Couronne” (The . It consists of three departments: les
Hauts-de-Seine (92), la Seine-Saint-Denis (93), and le Val-de-Marne (94).&lt;/p&gt;

&lt;h3 id=&quot;first-hand-vs-second-hand&quot;&gt;First-Hand vs Second-Hand&lt;/h3&gt;

&lt;p&gt;If we split the market into first-hand and second-hand, you can see that they
are actually quite different. In the widgets below, we compare the first-hand
market and second-hard market for their volume in 2020. The first one is for the entire
Île-de-France and the second one is aggregated by the department.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-bar-sales-apartments-and-houses-2020-volumes.png&quot; alt=&quot;Bar chart: volume of apartments and houses in Ile-de-France in 2020&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the entire Île-de-France, the first-hand apartments and houses represent about 1.1% of
the total mutations and the second-hand ones represent 98.9%. On the right
side, you can see the actual volume of each department. The first series (red)
is for second-hand transactions and the second series (green) is for
first-hand transactions.
As you can see,
second-hand transactions represent 99.9% of the transactions in Paris (75).
In other departments, second-hand transactions represent
about 98.5% of the market. I believe that this ratio is probably related to
COVID-19 because historically speaking, the ratio of second-hand transactions is
about 93% (2014 to 2019).&lt;/p&gt;

&lt;h3 id=&quot;second-hand&quot;&gt;Second-Hand&lt;/h3&gt;

&lt;p&gt;Now, what if we focus on the second-hand market?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-bar-sales-apartments-and-houses-2020-second-hand-volumes.png&quot; alt=&quot;Bar chart: volume of second-hand apartments and houses in Ile-de-France in 2020&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we focus on the second-hand market, we can see that there is almost no house
to sell in Paris (75). The entire market is filled with apartments (30,956
mutations). If you want to buy a house,
you probably need to go to the petite gouronne (92, 93, 94) or the grande
gouronne (77, 78, 91, 95). They have more offers. As for the price, Paris (75) is
still the champion with an average of 11,673 €/m2 for houses and 14,959 €/m2 for
the apartments. Les Hauts-de-Seine (92), le Val-de-Marne (94), and la
Seine-Saint-Denis (93) follow Paris (75) and take the top 4.&lt;/p&gt;

&lt;p&gt;We are reaching the end of this section. In this section, we compared the
apartments and houses in Île-de-France. We
compared the type of sales, the volume, and the price in different departments.
In the next section, we are going to explore the market of second-hand
apartments.&lt;/p&gt;

&lt;h2 id=&quot;second-hand-apartments&quot;&gt;Second-Hand Apartments&lt;/h2&gt;

&lt;h3 id=&quot;price&quot;&gt;Price&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/20210416-idf-line-sales-apartments-price-evolution-per-department.png&quot; alt=&quot;Line chart: median price of second-hand apartments and houses in Ile-de-France from 2016 to 2020&quot; width=&quot;700&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;First of all, let’s take a look at the price. As you can see in the graph above,
the median price of Paris is significantly higher than other departments and
the trend continues in 2020 despite the global pandemic. The podium didn’t
change in 2020: les Hauts-de-Seine (92) is still in the 2nd position and followed by
le Val-de-Marne (94) at the 3rd position. However, the price of les
Hauts-de-Seine (92) dropped significantly alongside with la Seine-et-Marne (77).
If you want to have a more detailed version of the trends displayed above, here
a table of comparison for you. In this table, there is the median price of the
second-hand apartment for each department in 2015 (5 years ago), 2019 (1 year
ago), and 2020. It allows you to better follow the department that matches your
interest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table: Median Price of the second-hand apartments in Île-de-France&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Department&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2015 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;5y Diff&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2019 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1y Diff&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2020 (€/m2)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;75 - Paris&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,098&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+35.0%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,218&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+7.0%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,933&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;92 - Hauts-de-Seine&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,463&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+25.6%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,536&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+5.0%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,860&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;93 - Seine-Saint-Denis&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,266&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+25.2%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,848&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+6.3%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,089&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;94 - Val-de-Marne&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,122&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+21.5%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,733&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+5.8%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,009&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;77 - Seine-et-Marne&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,989&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+10.3%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,176&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+3.8%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,296&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;78 - Yvelines&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,685&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+7.6%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,899&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+1.5%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,956&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;91 - Essonne&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,729&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+8.7%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,946&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+0.5%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,960&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;95 - Val-d’Oise&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,877&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+10.7%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,071&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;+3.7%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,184&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;pieces&quot;&gt;Pieces&lt;/h3&gt;

&lt;p&gt;Another important factor to take into account is the number of pieces. A single
person, a young couple, a family with 2 children, … they probably don’t have
the same needs. That’s why I want to study the number of pieces so that you can
find out what matches you most. Here is the distribution of the transactions grouped by the number
of pieces. The first one is for the entire Île-de-France and the second one is aggregated by department:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-composite-apartments-pieces-per-department-2020.png&quot; alt=&quot;Number of pieces for second-hand apartments and houses in Ile-de-France from 2016 to 2020&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;:warning: On the widget on the right side, the percentage is not shown in order.
The displayed order is 2, 5, 1, 3, and other. This is because
the term having the highest percentage has to be placed first in Kibana.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can see that T1 and T2 represent about half of the offers in the market of
the second-hand apartments. T3 and T4 represent almost the other half. There are only a few
apartments having more than 4 pieces, maybe because people prefer houses over
apartments when they need more rooms.&lt;/p&gt;

&lt;h3 id=&quot;budget&quot;&gt;Budget&lt;/h3&gt;

&lt;p&gt;We talked about the price per meter square (€/m2) and the number of pieces
inside an apartment. But we didn’t talk about the total price — how many budgets
do you have? Are you ready to spend that amount of money or make a mortgage?
To let you better understand the situation, I prepared another widget. It tells
you what you can buy with a given range of budget (200K€, 400K€, 600K€, 800K€):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/20210416-idf-bar-apartments-total-price-range.png&quot; alt=&quot;Number of pieces for second-hand apartments and houses in Ile-de-France from 2016 to 2020&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The color is not great but I don’t have time to make it better. I hope that it
won’t bother you too much.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From the widget above, we can find interesting information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If you have 200K€, you have a wide range of choices across all the
departments. You can buy an apartment at a reasonable price. It may not be
the best apartment that you want, but buying it will allow you to
start having your own property and stop wasting money on the apartment rent.
Based on the salary in Île-de-France and the constraint about the loan (up to 33%
net income), I think 200K€ is an important amount. Note that the choices are
much less for les Hauts-de-Seine (92) compared to other departments.&lt;/li&gt;
  &lt;li&gt;If you have 400K€, e.g. you are buying an apartment with your partner,
you can see that the range of choices is even larger. You should be able to
find something that fits your needs in each department.&lt;/li&gt;
  &lt;li&gt;For 400K€+, you can see that Paris (75) still has a lot of apartments that are
located in these ranges. They are super expensive. The buyers are probably not
normal residents but rather some real-estate investors (person or company)
or rich people. According to the Notary of France (Notaires de France), the
number of investors coming from foreign countries is not negligible. However,
the number reduced in 2020 and reached
its lowest level. For example, in the 6th district of Paris, the number
reduced from 17% in 2015 to 9.4% in Q3 2020 (&lt;a href=&quot;https://www.notaires.fr/fr/immobilier-fiscalit%C3%A9/prix-et-tendances-de-limmobilier/analyse-du-march%C3%A9-immobilier&quot;&gt;article link&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to go further from here?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To learn more about Kibana, visit Elastic’s official website
&lt;a href=&quot;https://www.elastic.co/kibana/&quot;&gt;https://www.elastic.co/kibana/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;To learn more about Elasticsearch, visit Elastic’s official website
&lt;a href=&quot;https://www.elastic.co/elasticsearch/&quot;&gt;https://www.elastic.co/elasticsearch/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;To learn more about how to use Elasticsearch for DVF, you can visit my
previous articles of this series &lt;a href=&quot;/series/dvf&quot;&gt;“DVF”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;To see the source code about this DVF project, you can visit my GitHub
repository &lt;a href=&quot;https://github.com/mincong-h/learning-elasticsearch&quot;&gt;mincong-h/learning-elasticsearch&lt;/a&gt;,
the source code is under the directory “demo-dvf”.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we analyzed the real estate market of Île-de-France in 2020. We
started from the global landscape and ended with a more focused analysis on the
market of second-hand apartments. We
saw the market was active in 2020 despite the pandemic. The period of March to May 2020
was difficult because of the lockdown. We saw that the number of
sales-under-completion reduced significantly in 2020 compared to last years (1%
vs 7%). As for apartments, les Hauts-de-Seine (92) was impacted by the pandemic
as the median price dropped at the end of 2020. On the other hand, the
situation is more optimistic for Paris (75): the median price of second-hand
apartments in Paris (75) increased 35.0% in 5 years and the growth continued
(7.0%) in 2020. We also saw that the 400K€ is maybe enough for the greater Paris area,
but not for Paris (75).
Interested to know more? Please subscribe to &lt;a href=&quot;/feed.xml&quot;&gt;the feed of my blog&lt;/a&gt;, follow me
on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or
&lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. This will really motivate me to
write more. Hope you enjoy this article, see you the next time!&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;What to do the next time?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I did this analysis for fun during my holidays and I spent 3 days on it. The
main issues were that the data preparation was very long and this is the first
time I used Kibana. Because of my limited number of day-offs, I don’t have more
time spent on it. If I can do that again in the future, here are some ideas of improvements:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Going further in the one department, e.g. Paris (75) because real estate is
highly related to geography, it does not have much added value if we only stay in
a high-level overview.&lt;/li&gt;
  &lt;li&gt;Perform a prediction-related widget to forecast the trend of a given metric.&lt;/li&gt;
  &lt;li&gt;Create a widget using a time-based comparison (e.g. comparing the same period
last year)&lt;/li&gt;
  &lt;li&gt;Annotate some widgets to better fit the analysis.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;… and you, do you have suggestions for improvements or what do you want to know more
about? Please let me know by leaving a comment 🙏&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Grégoire David, “France GeoJSON”, &lt;em&gt;github.com&lt;/em&gt;, 2018.
 &lt;a href=&quot;https://github.com/gregoiredavid/france-geojson&quot;&gt;https://github.com/gregoiredavid/france-geojson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Notaires de France, “Marché immobilier : tendance et évolution des prix de
l’immobilier”, &lt;em&gt;notaires.fr&lt;/em&gt;, 2021. &lt;a href=&quot;https://www.notaires.fr/fr/immobilier-fiscalit%C3%A9/prix-et-tendances-de-limmobilier/analyse-du-march%C3%A9-immobilier&quot;&gt;https://www.notaires.fr/fr/immobilier-fiscalit%C3%A9/prix-et-tendances-de-limmobilier/analyse-du-march%C3%A9-immobilier&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;PwC, “Emerging Trends in Real Estate - United States and Canada 2019”, &lt;em&gt;PwC&lt;/em&gt;, 2019.
&lt;a href=&quot;https://www.pwc.com/jg/en/publications/etre_us_2019_report.pdf&quot;&gt;https://www.pwc.com/jg/en/publications/etre_us_2019_report.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jingwen Zheng, “Second-hand apartments transactions in Île-de-France (01/2014 - 06/2020)”,
&lt;em&gt;jingwen-z.github.io&lt;/em&gt;, 2021.
&lt;a href=&quot;https://jingwen-z.github.io/second-hand-apartments-transactions-in-idf-1420/&quot;&gt;https://jingwen-z.github.io/second-hand-apartments-transactions-in-idf-1420/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="kibana" /><category term="open-data" /><summary type="html">This article studies the real estate market of Île-de-France in 2020 by exploring and visualizing the dataset DVF using Kibana. We will discuss the global landscape, the impact of COVID-19, the situation in different departments, and more.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-alexander-kagan-t9Td0zfDTwI-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-alexander-kagan-t9Td0zfDTwI-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">DVF: Aggregations</title><link href="https://mincong.io/2021/04/12/dvf-aggregations/" rel="alternate" type="text/html" title="DVF: Aggregations" /><published>2021-04-12T01:34:30+02:00</published><updated>2021-04-12T01:34:30+02:00</updated><id>https://mincong.io/2021/04/12/dvf-aggregations</id><content type="html" xml:base="https://mincong.io/2021/04/12/dvf-aggregations/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Open data “Demande de valeurs foncières (DVF)” is an open dataset provided by
the French government which collects all the real-estate transactions since
January 2014, in mainland France and the overseas departments and territories.
In the previous DVF articles, we talked about the write path: how to index new
documents, how to optimize storage, and how to perform snapshots and restores.
Starting from this article, we are going to focus on the read path: how to
perform different search actions on this dataset.&lt;/p&gt;

&lt;p&gt;This article will focus on aggregations. Aggregations are important for your
application because it provides an overview to your users without showing any
documents in detail. It also provides information about the selection range, such
as the min/max value of a given field. This topic is also part of the &lt;a href=&quot;https://www.elastic.co/training/elastic-certified-engineer-exam&quot;&gt;Elastic
Certified Engineer
Exam&lt;/a&gt;. After
reading this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How to write and execute metric aggregation?&lt;/li&gt;
  &lt;li&gt;How to write and execute bucket aggregation?&lt;/li&gt;
  &lt;li&gt;How to write and execute aggregations that contain sub-aggregations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To better demonstrate the importance of aggregations in real-world scenarios, I am going to use
different examples from the DVF dataset.
This article is written in Elasticsearch 7.12 and Java 11, but most of the
concepts should be appliable to any Elasticsearch 7.x cluster. Most of the
examples are written in two formats: HTTP requests with JSON content and Java. The goal is
to let you better understand how it works even if you are not familiar with
Java.&lt;/p&gt;

&lt;h2 id=&quot;prerequisite&quot;&gt;Prerequisite&lt;/h2&gt;

&lt;p&gt;Before writing any aggregation, we need to index the dataset into Elasticsearch.
This has been done in the previous articles so I am not going to go into detail
about it in this article. If you were interested in how to do it, you can
find the previous articles under the category “Elasticsearch” of my blog, they
are prefixed by “DVF”. Once the index is ready, you can find it in the
Elasticsearch cluster via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_cat&lt;/code&gt; indices API as “transactions”:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl localhost:9200/_cat/indices
yellow open transactions xMLeTfvwTYW1mdz5P85JsA 1 1 827105 0 207.3mb 207.3mb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;metric-aggregation&quot;&gt;Metric Aggregation&lt;/h2&gt;

&lt;p&gt;According to Elasticsearch documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-aggregations-metrics.html&quot;&gt;Metrics Aggregation
(7.x)&lt;/a&gt;,
the aggregations in this family compute metrics based on values extracted in one
way or another from the documents that are being aggregated. The values are
typically extracted from the fields of the document (using the field data), but
can also be generated using scripts.&lt;/p&gt;

&lt;p&gt;Here I am going to take a simple one: the metric &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-aggregations-metrics-valuecount-aggregation.html&quot;&gt;value
count&lt;/a&gt;. As the name indicated,
metric &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value_count&lt;/code&gt; shows how many documents are extracted from the aggregated
documents. To do that via REST API, we can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_search&lt;/code&gt; endpoint as
follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /transactions/_search
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match_all&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mutation_id/value_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mutation_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we take a quick look into the HTTP request, you will see that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;match_all&lt;/code&gt; query, which matches all the documents of the index
“transactions” without filtering.&lt;/li&gt;
  &lt;li&gt;The number of search hits to return is set to 0. The default value is 10.
Since we don’t care about those documents, setting it to 0 simplifies the
HTTP response.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We use one single-value metric aggregation and name it as
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mutation_id/value_count&lt;/code&gt;. I name it using the naming convention:&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;${field_name}/${metric_type}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;so that I can understand the target field name to be aggregated and the type
of metric. But this is just a personal preference. You are free to choose the name you
want.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The type of metric is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value_count&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The metric applies to field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mutation_id&lt;/code&gt;. I use this field because it is the
key of the mutation (transaction), so it is always non-null.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sending the request above will return:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;took&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;timed_out&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;successful&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;skipped&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gte&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max_score&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggregations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mutation_id/count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;827105&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It means that there were 827105 transactions in 2020 according to
the dataset. It matches the number of lines in the CSV file.
There is a difference of 1 line because the CSV file includes the header.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  dvf git:(master u=) wc -l downloads/full.2020.csv
  827106 downloads/full.2020.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s see how to do the same thing in Java:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aggregation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;AggregationBuilders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mutation_id/value_count&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mutation_id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transactions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sourceBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RequestOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DEFAULT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ValueCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAggregations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mutation_id/value_count&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is almost the same thing as the HTTP request. Here we:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an HTTP request with a search source. The hit size is set to 0 to avoid
returning hits.&lt;/li&gt;
  &lt;li&gt;The aggregation used is the value count (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value_count&lt;/code&gt;), named as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mutation_id/value_count&lt;/code&gt;,
targeting field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mutation_id&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;On the query side, it matches all documents without filtering.&lt;/li&gt;
  &lt;li&gt;Combining the index name and the search source, we create a search request.&lt;/li&gt;
  &lt;li&gt;We use the Java REST High Level Client to send the search request and get the
search response.&lt;/li&gt;
  &lt;li&gt;We can retrieve the aggregation from the response using the name of the
aggregation, i.e. using “mutation_id/value_count”.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this section, we discussed how metric aggregation works: we need to provide
the index names to be searched, the query to filter the document, and the
metrics aggregations to be performed. Now, let’s go to the next part: bucket
aggregations.&lt;/p&gt;

&lt;h2 id=&quot;bucket-aggregation&quot;&gt;Bucket Aggregation&lt;/h2&gt;

&lt;p&gt;Bucket aggregations that group documents into buckets, also called bins, based
on field values, ranges, or other criteria. In this section, we are going to use
postal code as an example: let’s see which postal code in France contains the
highest number of transactions?&lt;/p&gt;

&lt;p&gt;To answer this question, we need to prepare an HTTP request for bucket
aggregation:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match_all&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal_code/terms&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;terms&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal_code&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we take a quick look into the HTTP request, you will see the same concept as
above for the metric aggregation. This time, the bucket aggregation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;term&lt;/code&gt; does
the following things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It queries all the documents in the target index.&lt;/li&gt;
  &lt;li&gt;It sets the size to 0 to avoid returning documents (hits) because we don’t need them.&lt;/li&gt;
  &lt;li&gt;This is the key of the request. It specifies the type of aggregation to
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terms&lt;/code&gt; on field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postal_code&lt;/code&gt;. Therefore, we can obtain a result grouped by
postal code.&lt;/li&gt;
  &lt;li&gt;It only takes the top 3 results. More precisely, there are two notions: size
and order. Here we specified the size, which means the aggregation will return 3
results. As for the order, terms aggregation returns results in descending
order by default. So the terms having the most occurrences will be returned (defaults to 10).
Therefore, combined together (size and order), this setting returns the top 3 results.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sending the request above will return:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;took&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;timed_out&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;successful&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;skipped&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gte&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max_score&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggregations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal_code/terms&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count_error_upper_bound&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sum_other_doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;812333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;buckets&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9392&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;51100&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2859&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;75016&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2521&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the top 1 result is… missing value. Oh my god 😅 But this is the forever
pain for data scientists or whoever doing data analytics, isn’t it? If
we filter out that result, then the top 1 goes to Reims (51100) and the top 2
goes to Paris 16e district (75016).&lt;/p&gt;

&lt;p&gt;And here is the implementation in Java. I am not going to explain this code
block because it’s pretty straightforward:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aggregation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;AggregationBuilders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;terms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;postal_code/terms&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;postal_code&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transactions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sourceBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RequestOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DEFAULT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ParsedStringTerms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAggregations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;postal_code/terms&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countPerPostalCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBuckets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ParsedBucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;ParsedBucket:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getKeyAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;ParsedBucket:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDocCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this section, we saw how to create a bucket aggregation using terms
aggregations and field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postal_code&lt;/code&gt;. But all we saw are very primitive examples and they
didn’t provide much added value for data analytics. In the following sections, I
want to share something more interesting with you, such as: &lt;mark&gt;what is the average
price of a second-hand apartment in Paris?&lt;/mark&gt; Before answering this question, we will
need to compute the price per square meter (€/m2). I will show you how to do
that in the next section. And then, we will do the analysis for Paris.&lt;/p&gt;

&lt;h2 id=&quot;scripted-metric-aggregation&quot;&gt;Scripted Metric Aggregation&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;How to compute the price per square meter (€/m2)?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Our current goal is to compute the price per square meter for each apartment sold.
We can do that by doing simple math:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;price_m2 = total_price / built-up area
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are mainly 3 choices to compute this field:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do it at index-time: when we create the new document in Elasticsearch, we can
compute a field in our value class in Java. This is useful when we know
exactly what we need in advance.&lt;/li&gt;
  &lt;li&gt;Do it at runtime: update the index mapping to include a new scripted field.
This will apply to all the documents. This is useful when we don’t know what
additional fields we need when indexing documents. It provides flexibility to modify documents
at runtime. Especially useful for end-users.&lt;/li&gt;
  &lt;li&gt;Do it at query-time: create the field when running the query. This is probably
the most expensive one but it fits the on-demand requirement. Sometimes we
don’t want to keep one additional field forever because it’s only useful for
some queries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For now, I am going to use choice 3 because it fits the current article
which is about search. To prepare the scripted metric aggregation, we need to
provide a runtime mapping &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;price_m2&lt;/code&gt;, which is computed by two existing fields:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;property_value&lt;/code&gt; and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;real_built_un_area&lt;/code&gt;. It looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /transactions/_search
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;runtime_mappings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;emit(doc['property_value'].value / doc['real_built_up_area'].value)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script is written in “Painless Script”. Be careful about the logic that you
are going to add to this script because it is easy to change from painless to
painful 🙂. If you want to know more about Painless, visit Elasticsearch
documentation: &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-lang-spec.html&quot;&gt;Painless Language
Specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, going back to our scripted metric, we will need to handle some corner cases
because the property value or real built-up area may be missing or equal to 0. I
filtered them out in the “query” section of the aggregation. Also, we need to
filter the nature of the transaction (mutation) to select only the sales. Other
types like expropriation, exchange, judgement are not what we want. To simplify a
bit, I also excluded the category “sales under construction”. The final HTTP
request looks like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mutation_nature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Vente&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;local_type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Appartement&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;real_built_up_area&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;runtime_mappings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;emit(doc['property_value'].value / doc['real_built_up_area'].value)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we take a quick look into the HTTP request, you will see the same concept
again, as above for the metric aggregation and bucket aggregation. This time,
the metric aggregation term does the following things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It does not query all the documents anymore. It contains multiple filters,
encapsulated in a boolean query.&lt;/li&gt;
  &lt;li&gt;It defines a runtime mapping for field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;price_m2&lt;/code&gt;, computed from property
value and real built-up area.&lt;/li&gt;
  &lt;li&gt;It sets the size to 0 to avoid returning documents (hits) because we don’t need them.&lt;/li&gt;
  &lt;li&gt;This is the key of the request. It specifies the type of aggregation. We use
multi-valued metric aggregation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stats&lt;/code&gt;, which returns the min, max, average,
sum, and count of the field &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;price_m2&lt;/code&gt; in the selected documents.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sending the request above will return:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;took&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;timed_out&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;successful&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;skipped&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gte&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max_score&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggregations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;147763&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.003750000149011612&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8166666.666666667&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;26941.800127837614&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3981001212.2896695&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;transactions-in-paris&quot;&gt;Transactions In Paris&lt;/h2&gt;

&lt;p&gt;Now we have all the elements that we need, it’s time to do something fun! We
know how to execute a multi-valued metric aggregation, e.g. stats. We know how
to execute a bucket aggregation, e.g. per postal code. We know how to compute a
scripted metric for the price per meter square (m2). Now, let’s
use them to do a quick case study for Paris. This section aims to answer two questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What is the price for second-hand apartments in Paris per district
(arrondissement)?&lt;/li&gt;
  &lt;li&gt;What is the price for second-hand apartments in Paris per type of apartment (T1,
T2, T3, …)?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To answer the first question, we need to use sub-aggregations with 2 levels. The first
level is a terms aggregation per postal code and the second level is a list of
multi-valued metric aggregations: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;percentiles&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stats&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;percentiles&lt;/code&gt; for
price per square meter and
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stats&lt;/code&gt; for the total property value.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;must&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;wildcard&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal_code&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;75*&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mutation_nature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Vente&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;local_type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Appartement&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;real_built_up_area&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;runtime_mappings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;emit(doc['property_value'].value / doc['real_built_up_area'].value)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal-code-aggregation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;terms&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal_code&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/percentiles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;percentiles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value/percentiles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sending the request above will return:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggregations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postal-code-aggregation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count_error_upper_bound&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sum_other_doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;buckets&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;75018&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1740&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value/stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1740&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.15000000596046448&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9278000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;685657.4655678796&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1193043990.0881104&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/percentiles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;38.31908831908832&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4263.305322128852&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;25.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8581.576948155804&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;50.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10221.628370766353&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;75.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12191.63493555511&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;95.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;62619.36339522546&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;99.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;205629.62962962964&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;75017&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doc_count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1411&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;property_value/stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/percentiles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we transform the response a bit, we can obtain the following tables.&lt;/p&gt;

&lt;h3 id=&quot;total-price-per-district&quot;&gt;Total Price Per District&lt;/h3&gt;

&lt;p&gt;Here is the total price per district in Paris in percentiles: p5, p25, p50, p75,
p95. You can see that the 8th district (&lt;mark&gt;75008&lt;/mark&gt;) is the most
expensive for most of the percentiles. 50% of the apartments are more expensive
than 1.3M€ 🤯.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Postal Code&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p5 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p25 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p50 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p75 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p95 (€)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75001&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;41,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;404,794&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;691,666&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,740,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;7,005,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75002&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;45,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;278,350&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;496,075&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;970,392&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;18,500,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75003&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;610&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;319,583&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;541,163&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,095,193&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,550,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75004&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;16,100&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;350,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;595,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,030,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,171,100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75005&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;86,722&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;303,805&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;500,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;852,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,746,600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75006&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;103,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;389,867&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;729,260&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,504,999&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,408,400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75007&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;146,600&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;452,985&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;845,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,854,400&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,000,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;mark&gt;75008&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;19,310&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;433,250&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;mark&gt;1,299,950&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,323,542&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;33,100,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75009&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;80,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;301,325&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;551,894&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,148,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,300,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75010&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;106,499&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;295,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;486,668&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;837,383&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,716,667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75011&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;122,505&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;272,264&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;436,082&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;719,349&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,320,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75012&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;124,172&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;290,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;432,585&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;680,481&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,150,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75013&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;148,800&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;280,867&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;424,521&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;609,400&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,378,005&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75014&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;149,250&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;310,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;494,981&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;770,160&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,104,743&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75015&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;154,400&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;316,764&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;471,024&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;699,333&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,280,571&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75016&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;118,915&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;395,990&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;781,012&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,400,268&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,500,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75017&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;97,013&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;312,448&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;562,425&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,199,034&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,230,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75018&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;87,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;237,636&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;371,317&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;586,359&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,800,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75019&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;117,750&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;262,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;353,613&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;540,250&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,018,594&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75020&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;134,060&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;248,990&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;407,585&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;636,100&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,500,000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;price-per-m2-per-district&quot;&gt;Price Per M2 Per District&lt;/h3&gt;

&lt;p&gt;But using the total price of the apartment is not objective for judging whether
the appartment is expensive because they don’t have the same real built-in area
(m2). So we should normalize it. We can normalize it by calculating the price per meter square (€/m2). It
gives another table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Postal Code&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p5 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p25 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p50 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p75 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p95 (€/m2)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75001&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;729&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,591&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;14,208&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;26,602&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;231,818&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75002&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,492&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,853&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,505&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;15,586&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;391,045&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75003&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,144&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,308&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;17,131&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;167,899&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75004&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;343&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,405&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,077&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;15,448&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;32,767&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75005&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,616&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,004&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,679&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;15,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;30,905&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;mark&gt;75006&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,348&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,679&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;mark&gt;15,492&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;19,666&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;49,035&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;mark&gt;75007&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;7,114&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,857&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;mark&gt;15,236&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;20,179&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;130,105&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75008&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;260&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,715&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,301&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;39,951&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;919,444&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75009&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,925&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,208&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,207&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;14,734&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;342,463&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75010&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,331&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,570&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,174&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,747&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;128,161&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75011&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,140&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,787&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,167&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,078&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;198,674&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75012&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,222&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,015&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,264&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,669&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;84,290&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75013&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,010&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,345&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,769&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,386&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;56,522&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75014&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,389&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,378&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,805&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,948&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;318,546&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75015&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,994&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,546&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,762&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,066&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;17,901&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75016&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,910&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,504&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,810&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;28,489&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75017&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,152&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,967&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,700&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;14,165&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;181,150&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75018&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,263&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,582&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,222&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,192&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;62,619&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75019&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,204&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;7,294&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,060&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,579&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;30,095&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;75020&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,390&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,347&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,664&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,538&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;234,160&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can see that not only the 8th district (75008), but all the districts from
1th to 8th are very expensive. In particular, the median (percentile 50) of 6th
district (&lt;mark&gt;75006&lt;/mark&gt;) and 7th district (&lt;mark&gt;75007&lt;/mark&gt;) are higher
than 15k€/m2.&lt;/p&gt;

&lt;h3 id=&quot;prices-per-lot-type&quot;&gt;Prices Per Lot Type&lt;/h3&gt;

&lt;p&gt;In the previous tables, we use bucket aggregation on postal code. But we can
also analyze from another angle: the lot type (T1, T2, T3, T4, …). T1 means
there is only 1 piece in the apartment, T2 means there are 2 pieces, etc.
This type of analysis is useful because different people have different needs in
their lives. Young people probably want
to save some money and buy a small apartment, but a family probably wants a better
one (T3+) because they need more room for the babies, etc. Using the runtime
mappings (painless script) we saw before, we can compute the lot type as part
of the search aggregation request
and obtain the following tables.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;runtime_mappings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;emit(doc['property_value'].value / doc['real_built_up_area'].value)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lot_type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;if (0 &amp;lt; doc['lots_count'].value &amp;amp;&amp;amp; doc['lots_count'].value &amp;lt; 6) { emit('T' + doc['lots_count'].value) } else { emit('Others') }&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The prices per lot type in Paris in percentiles:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Lot Type&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p5 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p25 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p50 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p75 (€)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p95 (€)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;31,264&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;210,041&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;358,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;600,600&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,565,087&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;179,993&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;338,870&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;mark&gt;517,788&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;792,894&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,702,597&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;162,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;372,188&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;618,806&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,232,125&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,740,950&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;147,470&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;mark&gt;414,250&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;699,413&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,222,750&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,173,845&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;331,108&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;530,791&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;809,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,275,048&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,220,000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Others&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;262,500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,880,000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,712,857&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,572,222&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;33,100,000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;From the table above, we can see that it will be very hard to find an apartment if
your budget is below &lt;mark&gt;400,000€&lt;/mark&gt;. It means that either you have a wonderful job or
you will have to the house with your partner. Or maybe with some luck you won the
loto 😉. Anyway it’s very expensive.&lt;/p&gt;

&lt;p&gt;We can also normalize the price as we did before. Here is the price per meter square (€/m2) in Paris per lot type in percentiles:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Lot Type&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p5 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p25 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p50 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p75 (€/m2)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;p95 (€/m2)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;840&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,936&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,857&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,118&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;31,321&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,235&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,246&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,742&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,545&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;19,277&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5,763&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,679&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,488&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,572&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;23,407&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3,047&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,251&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11,021&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;13,586&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;22,644&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;T5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8,169&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10,498&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12,649&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;15,878&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;37,168&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Others&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6,250&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;63,372&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;147,957&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;300,013&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;916,866&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;From this table, we can see that regardless the number of pieces you want (the
lot type), the price per meter square (m2) does not change much. The lot type is
not an important factor for the price. The district is probably more important
as we saw in the previous sections.&lt;/p&gt;

&lt;p&gt;Alright, we go far enough into the Paris real-estate market. It’s
crazy and it’s not for us right now. Let’s come back to the aggregations
of Elasticsearch and we are reaching the end of this article.&lt;/p&gt;

&lt;h2 id=&quot;recapitulation&quot;&gt;Recapitulation&lt;/h2&gt;

&lt;p&gt;We saw several metric and bucket aggregations in this article, but we didn’t
see all of them. There are so many metrics in Elasticsearch that we cannot
remember everything. For me, the takeover is the syntax of the aggregation API.
Once you remember this, it’s easy to search on the internet and complete the rest:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /{index_name_expression}/_search
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{query_type}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;runtime_mappings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{mapping_name}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{aggregation_name}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{aggregation_type}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{field_name}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The API path contains the name of the index to be searched. It can also be multiple
indices separated by comma (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;) or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_all&lt;/code&gt; indices. As for the API request body,
it consists of multiple parts: the query part where you can specify the criteria
of the selection; the size part where you can specify the number of search hits
returned (actual documents found in Elasticsearch); the runtime mappings part
to define one or multiple computed fields at query time; and finally the
aggregations part where you can define your metric or bucket aggregation. You
can also provide sub-aggregations under a given aggregation.&lt;/p&gt;

&lt;p&gt;As for the response:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;took&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;timed_out&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_shards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aggregations&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;price_m2/stats&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;147763&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.003750000149011612&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8166666.666666667&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;26941.800127837614&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3981001212.2896695&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It contains some metadata about the search settings and performance, such as the
execution time, the timeout, the number of shards reached. Then, it contains the
number of hits and the actual documents. And finally the aggregations, each
aggregation is a key-value pair in the JSON response, where the key is the name
of the aggregation we specified and the value is the actual result of the
aggregation. As for the structure of the aggregation result:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For metric aggregation, the actual result is the metric. There is one metric
if this is a single-valued metric; there are multiple metrics if this is a
multi-valued metric.&lt;/li&gt;
  &lt;li&gt;For bucket aggregation, the actual results are shown under entry &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buckets&lt;/code&gt;.
Each bucket contains the key, the number of documents found, and the actual
metric(s) requested.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can also see it from another angle by comparing the syntax of Elasticsearch
Aggregations API to SQL. They are
not exactly equivalent, but I believe this comparison is helpful for
understanding:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Item&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;SQL&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Elasticsearch&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Source&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM {source_table}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Index name&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;You can select multiple indices in Elasticsearch but you cannot do that in SQL without JOIN.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Metric&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT my_func(my_field)&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Name of the aggregation&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Aggregation&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GROUP BY my_field&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;field&quot;: {my_field}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Query&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WHERE {clause}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;query&quot;: {clause}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Size&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;size&quot;: {size}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;There are no equivalent. In SQL, you cannot GROUP BY and select all the fields of some documents at the same time.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going Further&lt;/h2&gt;

&lt;p&gt;How to go further from here?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To learn more about aggregations for Elasticsearch 7, visit official
documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-aggregations.html&quot;&gt;“Aggregations
(7.x)”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;To learn more about boolean query for Elasticsearch 7, visit official
documentation &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/query-dsl-bool-query.html&quot;&gt;“Boolean query (7.x)”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;To learn more about dataset “Demandes de valeurs foncières géolocalisées”,
visit the website of the French government
&lt;a href=&quot;https://www.data.gouv.fr/fr/datasets/demandes-de-valeurs-foncieres-geolocalisees/&quot;&gt;etalab&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;To learn how to earn 1M€ and buy an apartment in Paris? Well, I want to know
as well. Please let me know if you have an answer by leaving a comment below. 😬&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested to see the source code, you can also find it on my GitHub
under project
&lt;a href=&quot;https://github.com/mincong-h/learning-elasticsearch/tree/blog-dvf-aggregations/demo-dvf&quot;&gt;mincong-h/learning-elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we saw how to use metric aggregation using an example of
value-count aggregation, how to use bucket aggregation for postal code via
terms aggregation, and how to use
scripted aggregation by computing the metric of price per square meter (m2). We
also saw how to perform an aggregation that contains sub-aggregations (stats and
percentiles) using Paris real-estate market as a demo. Finally, we saw how to
remember the syntax efficiently and how to go further from here.
Interested to know more? You can subscribe to &lt;a href=&quot;/feed.xml&quot;&gt;the feed of my blog&lt;/a&gt;, follow me
on &lt;a href=&quot;https://twitter.com/mincong_h&quot;&gt;Twitter&lt;/a&gt; or
&lt;a href=&quot;https://github.com/mincong-h/&quot;&gt;GitHub&lt;/a&gt;. Hope you enjoy this article, see you the next time!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Elasticsearch, “Value count aggregation”, &lt;em&gt;elastic.co&lt;/em&gt;, 2021.
&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-aggregations-metrics-valuecount-aggregation.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-aggregations-metrics-valuecount-aggregation.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Elasticsearch, “Elastic Certified Engineer Exam”, &lt;em&gt;elastic.co&lt;/em&gt;, 2021.
&lt;a href=&quot;https://www.elastic.co/training/elastic-certified-engineer-exam&quot;&gt;https://www.elastic.co/training/elastic-certified-engineer-exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jingwen Zheng, “Second-hand apartments transactions in Paris (01/2014 -
06/2020)”, &lt;em&gt;jingwen.github.io&lt;/em&gt;, 2021. &lt;a href=&quot;https://jingwen-z.github.io/second-hand-apartments-transactions-in-paris-1420/&quot;&gt;https://jingwen-z.github.io/second-hand-apartments-transactions-in-paris-1420/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Mincong Huang</name><email>mincong.h@gmail.com</email></author><category term="elasticsearch" /><category term="elasticsearch" /><category term="java" /><summary type="html">How to write and execute metric and bucket aggregations in Elasticsearch for dataset: Demandes de valeurs foncières (DVF) for data analytics. Also, how to execute aggregations that contain sub-aggregations.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mincong.io/assets/bg-henrique-ferreira-ZyYsY0ez2D4-unsplash.jpg" /><media:content medium="image" url="https://mincong.io/assets/bg-henrique-ferreira-ZyYsY0ez2D4-unsplash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>